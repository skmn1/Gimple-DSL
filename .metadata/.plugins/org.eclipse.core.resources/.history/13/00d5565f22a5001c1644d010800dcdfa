/*
 * generated by Xtext 2.25.0
 */
package fr.ensma.generator


import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.emf.ecore.resource.ResourceSet
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.example.people.people.Person
import fr.ensma.gimpleDsl.Function

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class GimpleDslGenerator implements IGimpleGenerator {

    override doGenerate(ResourceSet rs, IFileSystemAccess2 fsa, IGeneratorContext context) {

    val people = rs.resources.map(r|r.allContents.toIterable.filter(Function)).flatten
    fsa.generateFile("all.txt", people.compile)
    }

    override afterGenerate(Resource input, IFileSystemAccess2 fsa, IGeneratorContext context) {
    }

    override beforeGenerate(Resource input, IFileSystemAccess2 fsa, IGeneratorContext context) {
    }

    override doGenerate(Resource input, IFileSystemAccess2 fsa, IGeneratorContext context) {
    }

  def compile (Iterable<Function> entities) '''
    «FOR e : entities»
    «e.name»
    «ENDFOR»
  '''

}
	
	
	
