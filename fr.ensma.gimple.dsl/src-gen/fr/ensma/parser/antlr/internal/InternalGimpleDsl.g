/*
 * generated by Xtext 2.25.0
 */
grammar InternalGimpleDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.ensma.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.ensma.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.ensma.services.GimpleDslGrammarAccess;

}

@parser::members {

 	private GimpleDslGrammarAccess grammarAccess;

    public InternalGimpleDslParser(TokenStream input, GimpleDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "TAC";
   	}

   	@Override
   	protected GimpleDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleTAC
entryRuleTAC returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTACRule()); }
	iv_ruleTAC=ruleTAC
	{ $current=$iv_ruleTAC.current; }
	EOF;

// Rule TAC
ruleTAC returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTACAccess().getFunctionDefFunctionDefParserRuleCall_0_0());
				}
				lv_functionDef_0_0=ruleFunctionDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTACRule());
					}
					add(
						$current,
						"functionDef",
						lv_functionDef_0_0,
						"fr.ensma.GimpleDsl.FunctionDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTACAccess().getCommentLineCommentLineParserRuleCall_1_0());
				}
				lv_commentLine_1_0=ruleCommentLine
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTACRule());
					}
					add(
						$current,
						"commentLine",
						lv_commentLine_1_0,
						"fr.ensma.GimpleDsl.CommentLine");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)*
;

// Entry rule entryRuleFunctionDef
entryRuleFunctionDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionDefRule()); }
	iv_ruleFunctionDef=ruleFunctionDef
	{ $current=$iv_ruleFunctionDef.current; }
	EOF;

// Rule FunctionDef
ruleFunctionDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionDefAccess().getFunctionDefAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDefAccess().getNameFunctionParserRuleCall_1_0());
				}
				lv_name_1_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDefRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.ensma.GimpleDsl.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionDefAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionDefAccess().getFunctionparamFunctionParamParserRuleCall_3_0_0());
					}
					lv_functionparam_3_0=ruleFunctionParam
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionDefRule());
						}
						add(
							$current,
							"functionparam",
							lv_functionparam_3_0,
							"fr.ensma.GimpleDsl.FunctionParam");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getFunctionDefAccess().getCommaKeyword_3_1());
				}
			)?
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFunctionDefAccess().getRightParenthesisKeyword_4());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getFunctionDefAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDefAccess().getCodeBlockCodeBlockParserRuleCall_6_0());
				}
				lv_CodeBlock_7_0=ruleCodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDefRule());
					}
					set(
						$current,
						"CodeBlock",
						lv_CodeBlock_7_0,
						"fr.ensma.GimpleDsl.CodeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getFunctionDefAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleCodeBlock
entryRuleCodeBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCodeBlockRule()); }
	iv_ruleCodeBlock=ruleCodeBlock
	{ $current=$iv_ruleCodeBlock.current; }
	EOF;

// Rule CodeBlock
ruleCodeBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCodeBlockAccess().getCodeBlockAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCodeBlockAccess().getInstructionInstructionParserRuleCall_1_0());
				}
				lv_instruction_1_0=ruleInstruction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCodeBlockRule());
					}
					add(
						$current,
						"instruction",
						lv_instruction_1_0,
						"fr.ensma.GimpleDsl.Instruction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_2='return;'
			{
				newLeafNode(otherlv_2, grammarAccess.getCodeBlockAccess().getReturnKeyword_2());
			}
		)?
	)
;

// Entry rule entryRuleInstruction
entryRuleInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionRule()); }
	iv_ruleInstruction=ruleInstruction
	{ $current=$iv_ruleInstruction.current; }
	EOF;

// Rule Instruction
ruleInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionAccess().getVariableDeclarationVariableDeclarationParserRuleCall_0_0());
				}
				lv_variableDeclaration_0_0=ruleVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionRule());
					}
					set(
						$current,
						"variableDeclaration",
						lv_variableDeclaration_0_0,
						"fr.ensma.GimpleDsl.VariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionAccess().getVaraibleCallVariableCallParserRuleCall_1_0());
				}
				lv_varaibleCall_1_0=ruleVariableCall
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionRule());
					}
					set(
						$current,
						"varaibleCall",
						lv_varaibleCall_1_0,
						"fr.ensma.GimpleDsl.VariableCall");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionAccess().getConstantDelarationConstantDelarationParserRuleCall_2_0());
				}
				lv_constantDelaration_2_0=ruleConstantDelaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionRule());
					}
					set(
						$current,
						"constantDelaration",
						lv_constantDelaration_2_0,
						"fr.ensma.GimpleDsl.ConstantDelaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionAccess().getTempVariableTempVariableParserRuleCall_3_0());
				}
				lv_tempVariable_3_0=ruleTempVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionRule());
					}
					set(
						$current,
						"tempVariable",
						lv_tempVariable_3_0,
						"fr.ensma.GimpleDsl.TempVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionAccess().getStructStructParserRuleCall_4_0());
				}
				lv_struct_4_0=ruleStruct
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionRule());
					}
					set(
						$current,
						"struct",
						lv_struct_4_0,
						"fr.ensma.GimpleDsl.Struct");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionAccess().getLabelDefLabelDefParserRuleCall_5_0());
				}
				lv_LabelDef_5_0=ruleLabelDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionRule());
					}
					set(
						$current,
						"LabelDef",
						lv_LabelDef_5_0,
						"fr.ensma.GimpleDsl.LabelDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionAccess().getSwitchLabelDefSwitchLabelDefParserRuleCall_6_0());
				}
				lv_switchLabelDef_6_0=ruleSwitchLabelDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionRule());
					}
					set(
						$current,
						"switchLabelDef",
						lv_switchLabelDef_6_0,
						"fr.ensma.GimpleDsl.SwitchLabelDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionAccess().getGotoGotoParserRuleCall_7_0());
				}
				lv_goto_7_0=ruleGoto
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionRule());
					}
					set(
						$current,
						"goto",
						lv_goto_7_0,
						"fr.ensma.GimpleDsl.Goto");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionAccess().getIfIfParserRuleCall_8_0());
				}
				lv_if_8_0=ruleIf
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionRule());
					}
					set(
						$current,
						"if",
						lv_if_8_0,
						"fr.ensma.GimpleDsl.If");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionAccess().getExpressionTemporarieExpressionTemporarieParserRuleCall_9_0());
				}
				lv_expressionTemporarie_9_0=ruleExpressionTemporarie
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionRule());
					}
					set(
						$current,
						"expressionTemporarie",
						lv_expressionTemporarie_9_0,
						"fr.ensma.GimpleDsl.ExpressionTemporarie");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionAccess().getSwitchStatementSwitchStatmentParserRuleCall_10_0());
				}
				lv_switchStatement_10_0=ruleSwitchStatment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionRule());
					}
					set(
						$current,
						"switchStatement",
						lv_switchStatement_10_0,
						"fr.ensma.GimpleDsl.SwitchStatment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionAccess().getDebugTagDebugTagParserRuleCall_11_0());
				}
				lv_debugTag_11_0=ruleDebugTag
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionRule());
					}
					set(
						$current,
						"debugTag",
						lv_debugTag_11_0,
						"fr.ensma.GimpleDsl.DebugTag");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionAccess().getFunctionCallFunctionCallParserRuleCall_12_0());
				}
				lv_functionCall_12_0=ruleFunctionCall
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionRule());
					}
					set(
						$current,
						"functionCall",
						lv_functionCall_12_0,
						"fr.ensma.GimpleDsl.FunctionCall");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionAccess().getAssignOpAssignOperationParserRuleCall_13_0());
				}
				lv_assignOp_13_0=ruleAssignOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionRule());
					}
					set(
						$current,
						"assignOp",
						lv_assignOp_13_0,
						"fr.ensma.GimpleDsl.AssignOperation");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallRule()); }
	iv_ruleFunctionCall=ruleFunctionCall
	{ $current=$iv_ruleFunctionCall.current; }
	EOF;

// Rule FunctionCall
ruleFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionCallAccess().getFunctionCallAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionCallRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getFunctionCallAccess().getCalledFunctionFunctionCrossReference_1_0());
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionCallAccess().getFunctionArgumentFunctionArgumentParserRuleCall_3_0_0());
					}
					lv_functionArgument_3_0=ruleFunctionArgument
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
						}
						add(
							$current,
							"functionArgument",
							lv_functionArgument_3_0,
							"fr.ensma.GimpleDsl.FunctionArgument");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getFunctionCallAccess().getCommaKeyword_3_1());
				}
			)?
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_4());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getFunctionCallAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleFunctionParam
entryRuleFunctionParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionParamRule()); }
	iv_ruleFunctionParam=ruleFunctionParam
	{ $current=$iv_ruleFunctionParam.current; }
	EOF;

// Rule FunctionParam
ruleFunctionParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getFunctionParamAccess().getFunctionParamAction_0_0(),
						$current);
				}
			)
			otherlv_1='struct'
			{
				newLeafNode(otherlv_1, grammarAccess.getFunctionParamAccess().getStructKeyword_0_1());
			}
			this_ID_2=RULE_ID
			{
				newLeafNode(this_ID_2, grammarAccess.getFunctionParamAccess().getIDTerminalRuleCall_0_2());
			}
			(
				otherlv_3='*'
				{
					newLeafNode(otherlv_3, grammarAccess.getFunctionParamAccess().getAsteriskKeyword_0_3());
				}
			)?
			this_ID_4=RULE_ID
			{
				newLeafNode(this_ID_4, grammarAccess.getFunctionParamAccess().getIDTerminalRuleCall_0_4());
			}
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionParamAccess().getDatatypeDataTypeParserRuleCall_1_0_0());
					}
					lv_datatype_5_0=ruleDataType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionParamRule());
						}
						set(
							$current,
							"datatype",
							lv_datatype_5_0,
							"fr.ensma.GimpleDsl.DataType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6='*'
				{
					newLeafNode(otherlv_6, grammarAccess.getFunctionParamAccess().getAsteriskKeyword_1_1());
				}
			)?
			(
				(
					lv_name_7_0=RULE_ID
					{
						newLeafNode(lv_name_7_0, grammarAccess.getFunctionParamAccess().getNameIDTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFunctionParamRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_7_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFunctionArgument
entryRuleFunctionArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionArgumentRule()); }
	iv_ruleFunctionArgument=ruleFunctionArgument
	{ $current=$iv_ruleFunctionArgument.current; }
	EOF;

// Rule FunctionArgument
ruleFunctionArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionArgumentAccess().getFunctionArgumentAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionArgumentAccess().getNameArgumentParserRuleCall_1_0());
				}
				lv_name_1_0=ruleArgument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionArgumentRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.ensma.GimpleDsl.Argument");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleArgument
entryRuleArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	iv_ruleArgument=ruleArgument
	{ $current=$iv_ruleArgument.current; }
	EOF;

// Rule Argument
ruleArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getArgumentAccess().getArgumentAction_0_0(),
						$current);
				}
			)
			(
				(
					otherlv_1='&'
					{
						newLeafNode(otherlv_1, grammarAccess.getArgumentAccess().getAmpersandKeyword_0_1_0());
					}
				)?
				(
					(
						lv_name_2_0=RULE_ID
						{
							newLeafNode(lv_name_2_0, grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_0_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getArgumentRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_2_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				(
					otherlv_3='.'
					{
						newLeafNode(otherlv_3, grammarAccess.getArgumentAccess().getFullStopKeyword_0_1_2_0());
					}
					this_ID_4=RULE_ID
					{
						newLeafNode(this_ID_4, grammarAccess.getArgumentAccess().getIDTerminalRuleCall_0_1_2_1());
					}
				)*
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getArgumentAccess().getArgumentAction_1_0(),
						$current);
				}
			)
			this_INT_6=RULE_INT
			{
				newLeafNode(this_INT_6, grammarAccess.getArgumentAccess().getINTTerminalRuleCall_1_1());
			}
		)
	)
;

// Entry rule entryRuleStructVariableCall
entryRuleStructVariableCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructVariableCallRule()); }
	iv_ruleStructVariableCall=ruleStructVariableCall
	{ $current=$iv_ruleStructVariableCall.current; }
	EOF;

// Rule StructVariableCall
ruleStructVariableCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStructVariableCallRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getStructVariableCallAccess().getCalledStructVariableStructCrossReference_0_0());
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getStructVariableCallAccess().getFullStopKeyword_1());
		}
		this_ID_2=RULE_ID
		{
			newLeafNode(this_ID_2, grammarAccess.getStructVariableCallAccess().getIDTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleStruct
entryRuleStruct returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructRule()); }
	iv_ruleStruct=ruleStruct
	{ $current=$iv_ruleStruct.current; }
	EOF;

// Rule Struct
ruleStruct returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStructAccess().getStructAction_0(),
					$current);
			}
		)
		otherlv_1='struct'
		{
			newLeafNode(otherlv_1, grammarAccess.getStructAccess().getStructKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getStructAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStructRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='*'
			{
				newLeafNode(otherlv_3, grammarAccess.getStructAccess().getAsteriskKeyword_3());
			}
		)?
		(
			(
				lv_another_4_0=RULE_ID
				{
					newLeafNode(lv_another_4_0, grammarAccess.getStructAccess().getAnotherIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStructRule());
					}
					setWithLastConsumed(
						$current,
						"another",
						lv_another_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getStructAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleGoto
entryRuleGoto returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGotoRule()); }
	iv_ruleGoto=ruleGoto
	{ $current=$iv_ruleGoto.current; }
	EOF;

// Rule Goto
ruleGoto returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGotoAccess().getGotoAction_0(),
					$current);
			}
		)
		otherlv_1='goto'
		{
			newLeafNode(otherlv_1, grammarAccess.getGotoAccess().getGotoKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGotoRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getGotoAccess().getGotoLabelCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getGotoAccess().getSemicolonKeyword_3());
		}
		otherlv_4='[INV]'
		{
			newLeafNode(otherlv_4, grammarAccess.getGotoAccess().getINVKeyword_4());
		}
	)
;

// Entry rule entryRuleLabelDef
entryRuleLabelDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabelDefRule()); }
	iv_ruleLabelDef=ruleLabelDef
	{ $current=$iv_ruleLabelDef.current; }
	EOF;

// Rule LabelDef
ruleLabelDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLabelDefAccess().getLabelDefAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLabelDefAccess().getNameLabelParserRuleCall_1_0());
				}
				lv_name_1_0=ruleLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabelDefRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.ensma.GimpleDsl.Label");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSwitchStatment
entryRuleSwitchStatment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitchStatmentRule()); }
	iv_ruleSwitchStatment=ruleSwitchStatment
	{ $current=$iv_ruleSwitchStatment.current; }
	EOF;

// Rule SwitchStatment
ruleSwitchStatment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='switch'
		{
			newLeafNode(otherlv_0, grammarAccess.getSwitchStatmentAccess().getSwitchKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSwitchStatmentAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSwitchStatmentRule());
					}
				}
				otherlv_2=RULE_TEMP_VARIABLE_PATTERN
				{
					newLeafNode(otherlv_2, grammarAccess.getSwitchStatmentAccess().getTempVariableRefTempVariableCrossReference_2_0());
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getSwitchStatmentAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='<'
		{
			newLeafNode(otherlv_4, grammarAccess.getSwitchStatmentAccess().getLessThanSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchStatmentAccess().getSwitchDefaultCaseSwitchDefaultCaseParserRuleCall_5_0());
				}
				lv_switchDefaultCase_5_0=ruleSwitchDefaultCase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchStatmentRule());
					}
					add(
						$current,
						"switchDefaultCase",
						lv_switchDefaultCase_5_0,
						"fr.ensma.GimpleDsl.SwitchDefaultCase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchStatmentAccess().getSwitchCase1SwitchCaseParserRuleCall_6_0());
				}
				lv_SwitchCase1_6_0=ruleSwitchCase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchStatmentRule());
					}
					add(
						$current,
						"SwitchCase1",
						lv_SwitchCase1_6_0,
						"fr.ensma.GimpleDsl.SwitchCase");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='>'
		{
			newLeafNode(otherlv_7, grammarAccess.getSwitchStatmentAccess().getGreaterThanSignKeyword_7());
		}
	)
;

// Entry rule entryRuleSwitchDefaultCase
entryRuleSwitchDefaultCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitchDefaultCaseRule()); }
	iv_ruleSwitchDefaultCase=ruleSwitchDefaultCase
	{ $current=$iv_ruleSwitchDefaultCase.current; }
	EOF;

// Rule SwitchDefaultCase
ruleSwitchDefaultCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='default'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSwitchDefaultCaseAccess().getNameDefaultKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSwitchDefaultCaseRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "default");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSwitchDefaultCaseAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSwitchDefaultCaseRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSwitchDefaultCaseAccess().getSwitchLabelSwitchLabelCrossReference_2_0());
				}
				ruleQNSL
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='[INV]'
			{
				newLeafNode(otherlv_3, grammarAccess.getSwitchDefaultCaseAccess().getINVKeyword_3());
			}
		)?
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getSwitchDefaultCaseAccess().getCommaKeyword_4());
		}
	)
;

// Entry rule entryRuleSwitchCase
entryRuleSwitchCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitchCaseRule()); }
	iv_ruleSwitchCase=ruleSwitchCase
	{ $current=$iv_ruleSwitchCase.current; }
	EOF;

// Rule SwitchCase
ruleSwitchCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_CASE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSwitchCaseAccess().getNameCASE_IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSwitchCaseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"fr.ensma.GimpleDsl.CASE_ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSwitchCaseAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSwitchCaseRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSwitchCaseAccess().getSwitchLabelSwitchLabelCrossReference_2_0());
				}
				ruleQNSL
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='[INV]'
			{
				newLeafNode(otherlv_3, grammarAccess.getSwitchCaseAccess().getINVKeyword_3());
			}
		)?
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getSwitchCaseAccess().getCommaKeyword_4());
			}
		)?
	)
;

// Entry rule entryRuleSwitchLabelDef
entryRuleSwitchLabelDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitchLabelDefRule()); }
	iv_ruleSwitchLabelDef=ruleSwitchLabelDef
	{ $current=$iv_ruleSwitchLabelDef.current; }
	EOF;

// Rule SwitchLabelDef
ruleSwitchLabelDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSwitchLabelDefAccess().getNameSwitchLabelParserRuleCall_0());
			}
			lv_name_0_0=ruleSwitchLabel
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getSwitchLabelDefRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"fr.ensma.GimpleDsl.SwitchLabel");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSwitchLabel
entryRuleSwitchLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitchLabelRule()); }
	iv_ruleSwitchLabel=ruleSwitchLabel
	{ $current=$iv_ruleSwitchLabel.current; }
	EOF;

// Rule SwitchLabel
ruleSwitchLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchLabelAccess().getNameQNSLParserRuleCall_0_0());
				}
				lv_name_0_0=ruleQNSL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchLabelRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"fr.ensma.GimpleDsl.QNSL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSwitchLabelAccess().getColonKeyword_1());
		}
	)
;

// Entry rule entryRuleQNSL
entryRuleQNSL returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQNSLRule()); }
	iv_ruleQNSL=ruleQNSL
	{ $current=$iv_ruleQNSL.current.getText(); }
	EOF;

// Rule QNSL
ruleQNSL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQNSLAccess().getLessThanSignKeyword_0());
		}
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getQNSLAccess().getIDTerminalRuleCall_1());
		}
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQNSLAccess().getGreaterThanSignKeyword_2());
		}
	)
;

// Entry rule entryRuleLabel
entryRuleLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	iv_ruleLabel=ruleLabel
	{ $current=$iv_ruleLabel.current; }
	EOF;

// Rule Label
ruleLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLabelAccess().getLabelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLabelAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabelRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.ensma.GimpleDsl.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getLabelAccess().getColonKeyword_2());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getLessThanSignKeyword_0());
		}
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_2());
		}
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleIf
entryRuleIf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfRule()); }
	iv_ruleIf=ruleIf
	{ $current=$iv_ruleIf.current; }
	EOF;

// Rule If
ruleIf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIfAccess().getLeftParenthesisKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getIfAccess().getBooleanExpressionParserRuleCall_2());
		}
		this_BooleanExpression_2=ruleBooleanExpression
		{
			$current = $this_BooleanExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIfAccess().getInstructionInstructionParserRuleCall_4_0_0());
					}
					lv_instruction_4_0=ruleInstruction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfRule());
						}
						add(
							$current,
							"instruction",
							lv_instruction_4_0,
							"fr.ensma.GimpleDsl.Instruction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_5='{'
				{
					newLeafNode(otherlv_5, grammarAccess.getIfAccess().getLeftCurlyBracketKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getIfAccess().getCodeBlockCodeBlockParserRuleCall_4_1_1_0());
						}
						lv_codeBlock_6_0=ruleCodeBlock
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIfRule());
							}
							add(
								$current,
								"codeBlock",
								lv_codeBlock_6_0,
								"fr.ensma.GimpleDsl.CodeBlock");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7='}'
				{
					newLeafNode(otherlv_7, grammarAccess.getIfAccess().getRightCurlyBracketKeyword_4_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleAssignOperation
entryRuleAssignOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignOperationRule()); }
	iv_ruleAssignOperation=ruleAssignOperation
	{ $current=$iv_ruleAssignOperation.current; }
	EOF;

// Rule AssignOperation
ruleAssignOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAssignOperationAccess().getAssignOperationAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignOperationAccess().getNameVariableCallParserRuleCall_1_0_0());
					}
					lv_name_1_0=ruleVariableCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignOperationRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"fr.ensma.GimpleDsl.VariableCall");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignOperationAccess().getNameTempVariableParserRuleCall_1_1_0());
					}
					lv_name_2_0=ruleTempVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignOperationRule());
						}
						set(
							$current,
							"name",
							lv_name_2_0,
							"fr.ensma.GimpleDsl.TempVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignOperationAccess().getNameStructVariableCallParserRuleCall_1_2_0());
					}
					lv_name_3_0=ruleStructVariableCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignOperationRule());
						}
						set(
							$current,
							"name",
							lv_name_3_0,
							"fr.ensma.GimpleDsl.StructVariableCall");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getAssignOperationAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignOperationAccess().getCastCastParserRuleCall_3_0());
				}
				lv_cast_5_0=ruleCast
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignOperationRule());
					}
					set(
						$current,
						"cast",
						lv_cast_5_0 != null,
						"fr.ensma.GimpleDsl.Cast");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getAssignOperationAccess().getVcallVariableCallParserRuleCall_4_0_0_0_0());
							}
							lv_vcall_6_0=ruleVariableCall
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getAssignOperationRule());
								}
								add(
									$current,
									"vcall",
									lv_vcall_6_0,
									"fr.ensma.GimpleDsl.VariableCall");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getAssignOperationAccess().getTempVariableTempVariableParserRuleCall_4_0_0_1_0());
							}
							lv_tempVariable_7_0=ruleTempVariable
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getAssignOperationRule());
								}
								add(
									$current,
									"tempVariable",
									lv_tempVariable_7_0,
									"fr.ensma.GimpleDsl.TempVariable");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					this_INT_8=RULE_INT
					{
						newLeafNode(this_INT_8, grammarAccess.getAssignOperationAccess().getINTTerminalRuleCall_4_0_0_2());
					}
					    |
					(
						otherlv_9='&'
						{
							newLeafNode(otherlv_9, grammarAccess.getAssignOperationAccess().getAmpersandKeyword_4_0_0_3_0());
						}
						otherlv_10='{CLOBBER}'
						{
							newLeafNode(otherlv_10, grammarAccess.getAssignOperationAccess().getCLOBBERKeyword_4_0_0_3_1());
						}
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getAssignOperationAccess().getFunctionCallFunctionCallParserRuleCall_4_0_0_4_0());
							}
							lv_functionCall_11_0=ruleFunctionCall
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getAssignOperationRule());
								}
								add(
									$current,
									"functionCall",
									lv_functionCall_11_0,
									"fr.ensma.GimpleDsl.FunctionCall");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				(
					otherlv_12='->'
					{
						newLeafNode(otherlv_12, grammarAccess.getAssignOperationAccess().getHyphenMinusGreaterThanSignKeyword_4_0_1_0());
					}
					this_ID_13=RULE_ID
					{
						newLeafNode(this_ID_13, grammarAccess.getAssignOperationAccess().getIDTerminalRuleCall_4_0_1_1());
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignOperationAccess().getArithmeticOperationArithmeticOperationParserRuleCall_4_1_0());
					}
					lv_arithmeticOperation_14_0=ruleArithmeticOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignOperationRule());
						}
						add(
							$current,
							"arithmeticOperation",
							lv_arithmeticOperation_14_0,
							"fr.ensma.GimpleDsl.ArithmeticOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignOperationAccess().getBinaryOperationBinaryOperationParserRuleCall_4_2_0());
					}
					lv_binaryOperation_15_0=ruleBinaryOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignOperationRule());
						}
						add(
							$current,
							"binaryOperation",
							lv_binaryOperation_15_0,
							"fr.ensma.GimpleDsl.BinaryOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_16=';'
		{
			newLeafNode(otherlv_16, grammarAccess.getAssignOperationAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleConstantDelaration
entryRuleConstantDelaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantDelarationRule()); }
	iv_ruleConstantDelaration=ruleConstantDelaration
	{ $current=$iv_ruleConstantDelaration.current; }
	EOF;

// Rule ConstantDelaration
ruleConstantDelaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='const'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstantDelarationAccess().getConstKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstantDelarationAccess().getNameLocalVariableParserRuleCall_1_0());
				}
				lv_name_1_0=ruleLocalVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstantDelarationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.ensma.GimpleDsl.LocalVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariableCall
entryRuleVariableCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableCallRule()); }
	iv_ruleVariableCall=ruleVariableCall
	{ $current=$iv_ruleVariableCall.current; }
	EOF;

// Rule VariableCall
ruleVariableCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVariableCallRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getVariableCallAccess().getCalledVaraibleLocalVariableCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDeclarationRule()); }
	iv_ruleVariableDeclaration=ruleVariableDeclaration
	{ $current=$iv_ruleVariableDeclaration.current; }
	EOF;

// Rule VariableDeclaration
ruleVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeDataTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"fr.ensma.GimpleDsl.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getNameLocalVariableParserRuleCall_1_0());
				}
				lv_name_1_0=ruleLocalVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.ensma.GimpleDsl.LocalVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleExpressionTemporarie
entryRuleExpressionTemporarie returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionTemporarieRule()); }
	iv_ruleExpressionTemporarie=ruleExpressionTemporarie
	{ $current=$iv_ruleExpressionTemporarie.current; }
	EOF;

// Rule ExpressionTemporarie
ruleExpressionTemporarie returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionTemporarieAccess().getTempVariableLTempVariableParserRuleCall_0_0());
				}
				lv_tempVariableL_0_0=ruleTempVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionTemporarieRule());
					}
					add(
						$current,
						"tempVariableL",
						lv_tempVariableL_0_0,
						"fr.ensma.GimpleDsl.TempVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getExpressionTemporarieAccess().getEqualsSignKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionTemporarieAccess().getTempVariableR1TempVariableParserRuleCall_2_0_0());
					}
					lv_tempVariableR1_2_0=ruleTempVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionTemporarieRule());
						}
						add(
							$current,
							"tempVariableR1",
							lv_tempVariableR1_2_0,
							"fr.ensma.GimpleDsl.TempVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			this_ID_3=RULE_ID
			{
				newLeafNode(this_ID_3, grammarAccess.getExpressionTemporarieAccess().getIDTerminalRuleCall_2_1());
			}
			    |
			this_INT_4=RULE_INT
			{
				newLeafNode(this_INT_4, grammarAccess.getExpressionTemporarieAccess().getINTTerminalRuleCall_2_2());
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionTemporarieAccess().getArithmeticOperationArithmeticOperationParserRuleCall_3_0_0());
					}
					lv_arithmeticOperation_5_0=ruleArithmeticOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionTemporarieRule());
						}
						add(
							$current,
							"arithmeticOperation",
							lv_arithmeticOperation_5_0,
							"fr.ensma.GimpleDsl.ArithmeticOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionTemporarieAccess().getTempVariableR2TempVariableParserRuleCall_3_1_0_0());
						}
						lv_tempVariableR2_6_0=ruleTempVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionTemporarieRule());
							}
							add(
								$current,
								"tempVariableR2",
								lv_tempVariableR2_6_0,
								"fr.ensma.GimpleDsl.TempVariable");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				this_ID_7=RULE_ID
				{
					newLeafNode(this_ID_7, grammarAccess.getExpressionTemporarieAccess().getIDTerminalRuleCall_3_1_1());
				}
				    |
				this_INT_8=RULE_INT
				{
					newLeafNode(this_INT_8, grammarAccess.getExpressionTemporarieAccess().getINTTerminalRuleCall_3_1_2());
				}
			)
		)*
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getExpressionTemporarieAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleTempVariable
entryRuleTempVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTempVariableRule()); }
	iv_ruleTempVariable=ruleTempVariable
	{ $current=$iv_ruleTempVariable.current; }
	EOF;

// Rule TempVariable
ruleTempVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_TEMP_VARIABLE_PATTERN
			{
				newLeafNode(lv_name_0_0, grammarAccess.getTempVariableAccess().getNameTEMP_VARIABLE_PATTERNTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTempVariableRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"fr.ensma.GimpleDsl.TEMP_VARIABLE_PATTERN");
			}
		)
	)
;

// Entry rule entryRuleLocalVariable
entryRuleLocalVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalVariableRule()); }
	iv_ruleLocalVariable=ruleLocalVariable
	{ $current=$iv_ruleLocalVariable.current; }
	EOF;

// Rule LocalVariable
ruleLocalVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLocalVariableAccess().getNameVARIABLE_INDENTIFIERParserRuleCall_0());
			}
			lv_name_0_0=ruleVARIABLE_INDENTIFIER
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getLocalVariableRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"fr.ensma.GimpleDsl.VARIABLE_INDENTIFIER");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleVARIABLE_INDENTIFIER
entryRuleVARIABLE_INDENTIFIER returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVARIABLE_INDENTIFIERRule()); }
	iv_ruleVARIABLE_INDENTIFIER=ruleVARIABLE_INDENTIFIER
	{ $current=$iv_ruleVARIABLE_INDENTIFIER.current.getText(); }
	EOF;

// Rule VARIABLE_INDENTIFIER
ruleVARIABLE_INDENTIFIER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getVARIABLE_INDENTIFIERAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='_'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getVARIABLE_INDENTIFIERAccess().get_Keyword_1_0());
			}
			(
				this_ID_2=RULE_ID
				{
					$current.merge(this_ID_2);
				}
				{
					newLeafNode(this_ID_2, grammarAccess.getVARIABLE_INDENTIFIERAccess().getIDTerminalRuleCall_1_1_0());
				}
				    |
				this_INT_3=RULE_INT
				{
					$current.merge(this_INT_3);
				}
				{
					newLeafNode(this_INT_3, grammarAccess.getVARIABLE_INDENTIFIERAccess().getINTTerminalRuleCall_1_1_1());
				}
			)
		)*
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionAccess().getFunctionAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDebugTag
entryRuleDebugTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDebugTagRule()); }
	iv_ruleDebugTag=ruleDebugTag
	{ $current=$iv_ruleDebugTag.current; }
	EOF;

// Rule DebugTag
ruleDebugTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_DEBUG_BEGIN
			{
				newLeafNode(lv_name_0_0, grammarAccess.getDebugTagAccess().getNameDEBUG_BEGINTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDebugTagRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"fr.ensma.GimpleDsl.DEBUG_BEGIN");
			}
		)
	)
;

// Entry rule entryRuleCommentLine
entryRuleCommentLine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommentLineRule()); }
	iv_ruleCommentLine=ruleCommentLine
	{ $current=$iv_ruleCommentLine.current; }
	EOF;

// Rule CommentLine
ruleCommentLine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_SL_SC_COMMENT
			{
				newLeafNode(lv_name_0_0, grammarAccess.getCommentLineAccess().getNameSL_SC_COMMENTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getCommentLineRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"fr.ensma.GimpleDsl.SL_SC_COMMENT");
			}
		)
	)
;

// Entry rule entryRuleCast
entryRuleCast returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCastRule()); }
	iv_ruleCast=ruleCast
	{ $current=$iv_ruleCast.current; }
	EOF;

// Rule Cast
ruleCast returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getCastAccess().getLeftParenthesisKeyword_0());
		}
		(
			otherlv_1='short'
			{
				newLeafNode(otherlv_1, grammarAccess.getCastAccess().getShortKeyword_1());
			}
		)?
		(
			otherlv_2='signed'
			{
				newLeafNode(otherlv_2, grammarAccess.getCastAccess().getSignedKeyword_2_0());
			}
			    |
			otherlv_3='unsigned'
			{
				newLeafNode(otherlv_3, grammarAccess.getCastAccess().getUnsignedKeyword_2_1());
			}
		)?
		{
			newCompositeNode(grammarAccess.getCastAccess().getDataTypeParserRuleCall_3());
		}
		this_DataType_4=ruleDataType
		{
			$current = $this_DataType_4.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getCastAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDataTypeAccess().getDataTypeAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_name_1_1='float'
					{
						newLeafNode(lv_name_1_1, grammarAccess.getDataTypeAccess().getNameFloatKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataTypeRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_1, null);
					}
					    |
					lv_name_1_2='int'
					{
						newLeafNode(lv_name_1_2, grammarAccess.getDataTypeAccess().getNameIntKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataTypeRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_2, null);
					}
					    |
					lv_name_1_3='uint8_t'
					{
						newLeafNode(lv_name_1_3, grammarAccess.getDataTypeAccess().getNameUint8_tKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataTypeRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_3, null);
					}
					    |
					lv_name_1_4='int16_t'
					{
						newLeafNode(lv_name_1_4, grammarAccess.getDataTypeAccess().getNameInt16_tKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataTypeRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_4, null);
					}
					    |
					lv_name_1_5='char'
					{
						newLeafNode(lv_name_1_5, grammarAccess.getDataTypeAccess().getNameCharKeyword_1_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataTypeRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_5, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExpressionRule()); }
	iv_ruleBooleanExpression=ruleBooleanExpression
	{ $current=$iv_ruleBooleanExpression.current; }
	EOF;

// Rule BooleanExpression
ruleBooleanExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			newLeafNode(this_ID_0, grammarAccess.getBooleanExpressionAccess().getIDTerminalRuleCall_0());
		}
		{
			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getLogicalOperationParserRuleCall_1());
		}
		this_LogicalOperation_1=ruleLogicalOperation
		{
			$current = $this_LogicalOperation_1.current;
			afterParserOrEnumRuleCall();
		}
		this_INT_2=RULE_INT
		{
			newLeafNode(this_INT_2, grammarAccess.getBooleanExpressionAccess().getINTTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleArithmeticOperation
entryRuleArithmeticOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticOperationRule()); }
	iv_ruleArithmeticOperation=ruleArithmeticOperation
	{ $current=$iv_ruleArithmeticOperation.current; }
	EOF;

// Rule ArithmeticOperation
ruleArithmeticOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getArithmeticOperationAccess().getArithmeticOperationAction_0_0(),
						$current);
				}
			)
			otherlv_1='+'
			{
				newLeafNode(otherlv_1, grammarAccess.getArithmeticOperationAccess().getPlusSignKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getArithmeticOperationAccess().getArithmeticOperationAction_1_0(),
						$current);
				}
			)
			otherlv_3='-'
			{
				newLeafNode(otherlv_3, grammarAccess.getArithmeticOperationAccess().getHyphenMinusKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getArithmeticOperationAccess().getArithmeticOperationAction_2_0(),
						$current);
				}
			)
			otherlv_5='*'
			{
				newLeafNode(otherlv_5, grammarAccess.getArithmeticOperationAccess().getAsteriskKeyword_2_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getArithmeticOperationAccess().getArithmeticOperationAction_3_0(),
						$current);
				}
			)
			otherlv_7='/'
			{
				newLeafNode(otherlv_7, grammarAccess.getArithmeticOperationAccess().getSolidusKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleBinaryOperation
entryRuleBinaryOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryOperationRule()); }
	iv_ruleBinaryOperation=ruleBinaryOperation
	{ $current=$iv_ruleBinaryOperation.current; }
	EOF;

// Rule BinaryOperation
ruleBinaryOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryOperationAccess().getBinaryOperationAction_0_0(),
						$current);
				}
			)
			otherlv_1='&'
			{
				newLeafNode(otherlv_1, grammarAccess.getBinaryOperationAccess().getAmpersandKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryOperationAccess().getBinaryOperationAction_1_0(),
						$current);
				}
			)
			otherlv_3='|'
			{
				newLeafNode(otherlv_3, grammarAccess.getBinaryOperationAccess().getVerticalLineKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleLogicalOperation
entryRuleLogicalOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalOperationRule()); }
	iv_ruleLogicalOperation=ruleLogicalOperation
	{ $current=$iv_ruleLogicalOperation.current; }
	EOF;

// Rule LogicalOperation
ruleLogicalOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_0_0(),
						$current);
				}
			)
			otherlv_1='and'
			{
				newLeafNode(otherlv_1, grammarAccess.getLogicalOperationAccess().getAndKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_1_0(),
						$current);
				}
			)
			otherlv_3='or'
			{
				newLeafNode(otherlv_3, grammarAccess.getLogicalOperationAccess().getOrKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_2_0(),
						$current);
				}
			)
			otherlv_5='=<'
			{
				newLeafNode(otherlv_5, grammarAccess.getLogicalOperationAccess().getEqualsSignLessThanSignKeyword_2_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_3_0(),
						$current);
				}
			)
			otherlv_7='<'
			{
				newLeafNode(otherlv_7, grammarAccess.getLogicalOperationAccess().getLessThanSignKeyword_3_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_4_0(),
						$current);
				}
			)
			otherlv_9='>'
			{
				newLeafNode(otherlv_9, grammarAccess.getLogicalOperationAccess().getGreaterThanSignKeyword_4_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_5_0(),
						$current);
				}
			)
			otherlv_11='=>'
			{
				newLeafNode(otherlv_11, grammarAccess.getLogicalOperationAccess().getEqualsSignGreaterThanSignKeyword_5_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_6_0(),
						$current);
				}
			)
			otherlv_13='=='
			{
				newLeafNode(otherlv_13, grammarAccess.getLogicalOperationAccess().getEqualsSignEqualsSignKeyword_6_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_7_0(),
						$current);
				}
			)
			otherlv_15='!='
			{
				newLeafNode(otherlv_15, grammarAccess.getLogicalOperationAccess().getExclamationMarkEqualsSignKeyword_7_1());
			}
		)
	)
;

RULE_CASE_ID : 'case ' RULE_INT;

RULE_TEMP_VARIABLE_PATTERN : '_' RULE_INT;

RULE_DEBUG_BEGIN : '# DEBUG BEGIN_STMT';

RULE_SL_SC_COMMENT : ';;' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
