/*
 * generated by Xtext 2.25.0
 */
grammar InternalGimpleDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.ensma.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.ensma.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.ensma.services.GimpleDslGrammarAccess;

}
@parser::members {
	private GimpleDslGrammarAccess grammarAccess;

	public void setGrammarAccess(GimpleDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleTAC
entryRuleTAC
:
{ before(grammarAccess.getTACRule()); }
	 ruleTAC
{ after(grammarAccess.getTACRule()); } 
	 EOF 
;

// Rule TAC
ruleTAC 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTACAccess().getAlternatives()); }
		(rule__TAC__Alternatives)*
		{ after(grammarAccess.getTACAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionDef
entryRuleFunctionDef
:
{ before(grammarAccess.getFunctionDefRule()); }
	 ruleFunctionDef
{ after(grammarAccess.getFunctionDefRule()); } 
	 EOF 
;

// Rule FunctionDef
ruleFunctionDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDefAccess().getGroup()); }
		(rule__FunctionDef__Group__0)
		{ after(grammarAccess.getFunctionDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCodeBlock
entryRuleCodeBlock
:
{ before(grammarAccess.getCodeBlockRule()); }
	 ruleCodeBlock
{ after(grammarAccess.getCodeBlockRule()); } 
	 EOF 
;

// Rule CodeBlock
ruleCodeBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCodeBlockAccess().getGroup()); }
		(rule__CodeBlock__Group__0)
		{ after(grammarAccess.getCodeBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
		(rule__Instruction__Alternatives)
		{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
		(rule__FunctionCall__Group__0)
		{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionParam
entryRuleFunctionParam
:
{ before(grammarAccess.getFunctionParamRule()); }
	 ruleFunctionParam
{ after(grammarAccess.getFunctionParamRule()); } 
	 EOF 
;

// Rule FunctionParam
ruleFunctionParam 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionParamAccess().getAlternatives()); }
		(rule__FunctionParam__Alternatives)
		{ after(grammarAccess.getFunctionParamAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionArgument
entryRuleFunctionArgument
:
{ before(grammarAccess.getFunctionArgumentRule()); }
	 ruleFunctionArgument
{ after(grammarAccess.getFunctionArgumentRule()); } 
	 EOF 
;

// Rule FunctionArgument
ruleFunctionArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionArgumentAccess().getGroup()); }
		(rule__FunctionArgument__Group__0)
		{ after(grammarAccess.getFunctionArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgument
entryRuleArgument
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentAccess().getAlternatives()); }
		(rule__Argument__Alternatives)
		{ after(grammarAccess.getArgumentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructVariableCall
entryRuleStructVariableCall
:
{ before(grammarAccess.getStructVariableCallRule()); }
	 ruleStructVariableCall
{ after(grammarAccess.getStructVariableCallRule()); } 
	 EOF 
;

// Rule StructVariableCall
ruleStructVariableCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructVariableCallAccess().getGroup()); }
		(rule__StructVariableCall__Group__0)
		{ after(grammarAccess.getStructVariableCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStruct
entryRuleStruct
:
{ before(grammarAccess.getStructRule()); }
	 ruleStruct
{ after(grammarAccess.getStructRule()); } 
	 EOF 
;

// Rule Struct
ruleStruct 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructAccess().getGroup()); }
		(rule__Struct__Group__0)
		{ after(grammarAccess.getStructAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGoto
entryRuleGoto
:
{ before(grammarAccess.getGotoRule()); }
	 ruleGoto
{ after(grammarAccess.getGotoRule()); } 
	 EOF 
;

// Rule Goto
ruleGoto 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGotoAccess().getGroup()); }
		(rule__Goto__Group__0)
		{ after(grammarAccess.getGotoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabelDef
entryRuleLabelDef
:
{ before(grammarAccess.getLabelDefRule()); }
	 ruleLabelDef
{ after(grammarAccess.getLabelDefRule()); } 
	 EOF 
;

// Rule LabelDef
ruleLabelDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelDefAccess().getGroup()); }
		(rule__LabelDef__Group__0)
		{ after(grammarAccess.getLabelDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitchStatment
entryRuleSwitchStatment
:
{ before(grammarAccess.getSwitchStatmentRule()); }
	 ruleSwitchStatment
{ after(grammarAccess.getSwitchStatmentRule()); } 
	 EOF 
;

// Rule SwitchStatment
ruleSwitchStatment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchStatmentAccess().getGroup()); }
		(rule__SwitchStatment__Group__0)
		{ after(grammarAccess.getSwitchStatmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitchDefaultCase
entryRuleSwitchDefaultCase
:
{ before(grammarAccess.getSwitchDefaultCaseRule()); }
	 ruleSwitchDefaultCase
{ after(grammarAccess.getSwitchDefaultCaseRule()); } 
	 EOF 
;

// Rule SwitchDefaultCase
ruleSwitchDefaultCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchDefaultCaseAccess().getGroup()); }
		(rule__SwitchDefaultCase__Group__0)
		{ after(grammarAccess.getSwitchDefaultCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitchCase
entryRuleSwitchCase
:
{ before(grammarAccess.getSwitchCaseRule()); }
	 ruleSwitchCase
{ after(grammarAccess.getSwitchCaseRule()); } 
	 EOF 
;

// Rule SwitchCase
ruleSwitchCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchCaseAccess().getGroup()); }
		(rule__SwitchCase__Group__0)
		{ after(grammarAccess.getSwitchCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitchLabelDef
entryRuleSwitchLabelDef
:
{ before(grammarAccess.getSwitchLabelDefRule()); }
	 ruleSwitchLabelDef
{ after(grammarAccess.getSwitchLabelDefRule()); } 
	 EOF 
;

// Rule SwitchLabelDef
ruleSwitchLabelDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchLabelDefAccess().getNameAssignment()); }
		(rule__SwitchLabelDef__NameAssignment)
		{ after(grammarAccess.getSwitchLabelDefAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitchLabel
entryRuleSwitchLabel
:
{ before(grammarAccess.getSwitchLabelRule()); }
	 ruleSwitchLabel
{ after(grammarAccess.getSwitchLabelRule()); } 
	 EOF 
;

// Rule SwitchLabel
ruleSwitchLabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchLabelAccess().getGroup()); }
		(rule__SwitchLabel__Group__0)
		{ after(grammarAccess.getSwitchLabelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQNSL
entryRuleQNSL
:
{ before(grammarAccess.getQNSLRule()); }
	 ruleQNSL
{ after(grammarAccess.getQNSLRule()); } 
	 EOF 
;

// Rule QNSL
ruleQNSL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQNSLAccess().getGroup()); }
		(rule__QNSL__Group__0)
		{ after(grammarAccess.getQNSLAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabel
entryRuleLabel
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelAccess().getGroup()); }
		(rule__Label__Group__0)
		{ after(grammarAccess.getLabelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIf
entryRuleIf
:
{ before(grammarAccess.getIfRule()); }
	 ruleIf
{ after(grammarAccess.getIfRule()); } 
	 EOF 
;

// Rule If
ruleIf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfAccess().getGroup()); }
		(rule__If__Group__0)
		{ after(grammarAccess.getIfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignOperation
entryRuleAssignOperation
:
{ before(grammarAccess.getAssignOperationRule()); }
	 ruleAssignOperation
{ after(grammarAccess.getAssignOperationRule()); } 
	 EOF 
;

// Rule AssignOperation
ruleAssignOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignOperationAccess().getGroup()); }
		(rule__AssignOperation__Group__0)
		{ after(grammarAccess.getAssignOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantDelaration
entryRuleConstantDelaration
:
{ before(grammarAccess.getConstantDelarationRule()); }
	 ruleConstantDelaration
{ after(grammarAccess.getConstantDelarationRule()); } 
	 EOF 
;

// Rule ConstantDelaration
ruleConstantDelaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantDelarationAccess().getGroup()); }
		(rule__ConstantDelaration__Group__0)
		{ after(grammarAccess.getConstantDelarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableCall
entryRuleVariableCall
:
{ before(grammarAccess.getVariableCallRule()); }
	 ruleVariableCall
{ after(grammarAccess.getVariableCallRule()); } 
	 EOF 
;

// Rule VariableCall
ruleVariableCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableCallAccess().getCalledVaraibleAssignment()); }
		(rule__VariableCall__CalledVaraibleAssignment)
		{ after(grammarAccess.getVariableCallAccess().getCalledVaraibleAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
		(rule__VariableDeclaration__Group__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionTemporarie
entryRuleExpressionTemporarie
:
{ before(grammarAccess.getExpressionTemporarieRule()); }
	 ruleExpressionTemporarie
{ after(grammarAccess.getExpressionTemporarieRule()); } 
	 EOF 
;

// Rule ExpressionTemporarie
ruleExpressionTemporarie 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionTemporarieAccess().getGroup()); }
		(rule__ExpressionTemporarie__Group__0)
		{ after(grammarAccess.getExpressionTemporarieAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTempVariable
entryRuleTempVariable
:
{ before(grammarAccess.getTempVariableRule()); }
	 ruleTempVariable
{ after(grammarAccess.getTempVariableRule()); } 
	 EOF 
;

// Rule TempVariable
ruleTempVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTempVariableAccess().getNameAssignment()); }
		(rule__TempVariable__NameAssignment)
		{ after(grammarAccess.getTempVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocalVariable
entryRuleLocalVariable
:
{ before(grammarAccess.getLocalVariableRule()); }
	 ruleLocalVariable
{ after(grammarAccess.getLocalVariableRule()); } 
	 EOF 
;

// Rule LocalVariable
ruleLocalVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocalVariableAccess().getNameAssignment()); }
		(rule__LocalVariable__NameAssignment)
		{ after(grammarAccess.getLocalVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVARIABLE_INDENTIFIER
entryRuleVARIABLE_INDENTIFIER
:
{ before(grammarAccess.getVARIABLE_INDENTIFIERRule()); }
	 ruleVARIABLE_INDENTIFIER
{ after(grammarAccess.getVARIABLE_INDENTIFIERRule()); } 
	 EOF 
;

// Rule VARIABLE_INDENTIFIER
ruleVARIABLE_INDENTIFIER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVARIABLE_INDENTIFIERAccess().getGroup()); }
		(rule__VARIABLE_INDENTIFIER__Group__0)
		{ after(grammarAccess.getVARIABLE_INDENTIFIERAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDebugTag
entryRuleDebugTag
:
{ before(grammarAccess.getDebugTagRule()); }
	 ruleDebugTag
{ after(grammarAccess.getDebugTagRule()); } 
	 EOF 
;

// Rule DebugTag
ruleDebugTag 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDebugTagAccess().getNameAssignment()); }
		(rule__DebugTag__NameAssignment)
		{ after(grammarAccess.getDebugTagAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommentLine
entryRuleCommentLine
:
{ before(grammarAccess.getCommentLineRule()); }
	 ruleCommentLine
{ after(grammarAccess.getCommentLineRule()); } 
	 EOF 
;

// Rule CommentLine
ruleCommentLine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentLineAccess().getNameAssignment()); }
		(rule__CommentLine__NameAssignment)
		{ after(grammarAccess.getCommentLineAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCast
entryRuleCast
:
{ before(grammarAccess.getCastRule()); }
	 ruleCast
{ after(grammarAccess.getCastRule()); } 
	 EOF 
;

// Rule Cast
ruleCast 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCastAccess().getGroup()); }
		(rule__Cast__Group__0)
		{ after(grammarAccess.getCastAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup()); }
		(rule__DataType__Group__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getGroup()); }
		(rule__BooleanExpression__Group__0)
		{ after(grammarAccess.getBooleanExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithmeticOperation
entryRuleArithmeticOperation
:
{ before(grammarAccess.getArithmeticOperationRule()); }
	 ruleArithmeticOperation
{ after(grammarAccess.getArithmeticOperationRule()); } 
	 EOF 
;

// Rule ArithmeticOperation
ruleArithmeticOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithmeticOperationAccess().getAlternatives()); }
		(rule__ArithmeticOperation__Alternatives)
		{ after(grammarAccess.getArithmeticOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryOperation
entryRuleBinaryOperation
:
{ before(grammarAccess.getBinaryOperationRule()); }
	 ruleBinaryOperation
{ after(grammarAccess.getBinaryOperationRule()); } 
	 EOF 
;

// Rule BinaryOperation
ruleBinaryOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryOperationAccess().getAlternatives()); }
		(rule__BinaryOperation__Alternatives)
		{ after(grammarAccess.getBinaryOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalOperation
entryRuleLogicalOperation
:
{ before(grammarAccess.getLogicalOperationRule()); }
	 ruleLogicalOperation
{ after(grammarAccess.getLogicalOperationRule()); } 
	 EOF 
;

// Rule LogicalOperation
ruleLogicalOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalOperationAccess().getAlternatives()); }
		(rule__LogicalOperation__Alternatives)
		{ after(grammarAccess.getLogicalOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TAC__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTACAccess().getFunctionDefAssignment_0()); }
		(rule__TAC__FunctionDefAssignment_0)
		{ after(grammarAccess.getTACAccess().getFunctionDefAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTACAccess().getCommentLineAssignment_1()); }
		(rule__TAC__CommentLineAssignment_1)
		{ after(grammarAccess.getTACAccess().getCommentLineAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getVariableDeclarationAssignment_0()); }
		(rule__Instruction__VariableDeclarationAssignment_0)
		{ after(grammarAccess.getInstructionAccess().getVariableDeclarationAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getVaraibleCallAssignment_1()); }
		(rule__Instruction__VaraibleCallAssignment_1)
		{ after(grammarAccess.getInstructionAccess().getVaraibleCallAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getConstantDelarationAssignment_2()); }
		(rule__Instruction__ConstantDelarationAssignment_2)
		{ after(grammarAccess.getInstructionAccess().getConstantDelarationAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getTempVariableAssignment_3()); }
		(rule__Instruction__TempVariableAssignment_3)
		{ after(grammarAccess.getInstructionAccess().getTempVariableAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getStructAssignment_4()); }
		(rule__Instruction__StructAssignment_4)
		{ after(grammarAccess.getInstructionAccess().getStructAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getLabelDefAssignment_5()); }
		(rule__Instruction__LabelDefAssignment_5)
		{ after(grammarAccess.getInstructionAccess().getLabelDefAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getSwitchLabelDefAssignment_6()); }
		(rule__Instruction__SwitchLabelDefAssignment_6)
		{ after(grammarAccess.getInstructionAccess().getSwitchLabelDefAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getGotoAssignment_7()); }
		(rule__Instruction__GotoAssignment_7)
		{ after(grammarAccess.getInstructionAccess().getGotoAssignment_7()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getIfAssignment_8()); }
		(rule__Instruction__IfAssignment_8)
		{ after(grammarAccess.getInstructionAccess().getIfAssignment_8()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getExpressionTemporarieAssignment_9()); }
		(rule__Instruction__ExpressionTemporarieAssignment_9)
		{ after(grammarAccess.getInstructionAccess().getExpressionTemporarieAssignment_9()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getSwitchStatementAssignment_10()); }
		(rule__Instruction__SwitchStatementAssignment_10)
		{ after(grammarAccess.getInstructionAccess().getSwitchStatementAssignment_10()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getDebugTagAssignment_11()); }
		(rule__Instruction__DebugTagAssignment_11)
		{ after(grammarAccess.getInstructionAccess().getDebugTagAssignment_11()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getFunctionCallAssignment_12()); }
		(rule__Instruction__FunctionCallAssignment_12)
		{ after(grammarAccess.getInstructionAccess().getFunctionCallAssignment_12()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getAssignOpAssignment_13()); }
		(rule__Instruction__AssignOpAssignment_13)
		{ after(grammarAccess.getInstructionAccess().getAssignOpAssignment_13()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionParamAccess().getGroup_0()); }
		(rule__FunctionParam__Group_0__0)
		{ after(grammarAccess.getFunctionParamAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionParamAccess().getGroup_1()); }
		(rule__FunctionParam__Group_1__0)
		{ after(grammarAccess.getFunctionParamAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getGroup_0()); }
		(rule__Argument__Group_0__0)
		{ after(grammarAccess.getArgumentAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentAccess().getGroup_1()); }
		(rule__Argument__Group_1__0)
		{ after(grammarAccess.getArgumentAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getInstructionAssignment_4_0()); }
		(rule__If__InstructionAssignment_4_0)
		{ after(grammarAccess.getIfAccess().getInstructionAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfAccess().getGroup_4_1()); }
		(rule__If__Group_4_1__0)
		{ after(grammarAccess.getIfAccess().getGroup_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignOperationAccess().getNameAssignment_1_0()); }
		(rule__AssignOperation__NameAssignment_1_0)
		{ after(grammarAccess.getAssignOperationAccess().getNameAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperationAccess().getNameAssignment_1_1()); }
		(rule__AssignOperation__NameAssignment_1_1)
		{ after(grammarAccess.getAssignOperationAccess().getNameAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperationAccess().getNameAssignment_1_2()); }
		(rule__AssignOperation__NameAssignment_1_2)
		{ after(grammarAccess.getAssignOperationAccess().getNameAssignment_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignOperationAccess().getGroup_4_0()); }
		(rule__AssignOperation__Group_4_0__0)
		{ after(grammarAccess.getAssignOperationAccess().getGroup_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperationAccess().getArithmeticOperationAssignment_4_1()); }
		(rule__AssignOperation__ArithmeticOperationAssignment_4_1)
		{ after(grammarAccess.getAssignOperationAccess().getArithmeticOperationAssignment_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperationAccess().getBinaryOperationAssignment_4_2()); }
		(rule__AssignOperation__BinaryOperationAssignment_4_2)
		{ after(grammarAccess.getAssignOperationAccess().getBinaryOperationAssignment_4_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Alternatives_4_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignOperationAccess().getVcallAssignment_4_0_0_0()); }
		(rule__AssignOperation__VcallAssignment_4_0_0_0)
		{ after(grammarAccess.getAssignOperationAccess().getVcallAssignment_4_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperationAccess().getTempVariableAssignment_4_0_0_1()); }
		(rule__AssignOperation__TempVariableAssignment_4_0_0_1)
		{ after(grammarAccess.getAssignOperationAccess().getTempVariableAssignment_4_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperationAccess().getINTTerminalRuleCall_4_0_0_2()); }
		RULE_INT
		{ after(grammarAccess.getAssignOperationAccess().getINTTerminalRuleCall_4_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperationAccess().getGroup_4_0_0_3()); }
		(rule__AssignOperation__Group_4_0_0_3__0)
		{ after(grammarAccess.getAssignOperationAccess().getGroup_4_0_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getAssignOperationAccess().getFunctionCallAssignment_4_0_0_4()); }
		(rule__AssignOperation__FunctionCallAssignment_4_0_0_4)
		{ after(grammarAccess.getAssignOperationAccess().getFunctionCallAssignment_4_0_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionTemporarieAccess().getTempVariableR1Assignment_2_0()); }
		(rule__ExpressionTemporarie__TempVariableR1Assignment_2_0)
		{ after(grammarAccess.getExpressionTemporarieAccess().getTempVariableR1Assignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionTemporarieAccess().getIDTerminalRuleCall_2_1()); }
		RULE_ID
		{ after(grammarAccess.getExpressionTemporarieAccess().getIDTerminalRuleCall_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionTemporarieAccess().getINTTerminalRuleCall_2_2()); }
		RULE_INT
		{ after(grammarAccess.getExpressionTemporarieAccess().getINTTerminalRuleCall_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__Alternatives_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionTemporarieAccess().getTempVariableR2Assignment_3_1_0()); }
		(rule__ExpressionTemporarie__TempVariableR2Assignment_3_1_0)
		{ after(grammarAccess.getExpressionTemporarieAccess().getTempVariableR2Assignment_3_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionTemporarieAccess().getIDTerminalRuleCall_3_1_1()); }
		RULE_ID
		{ after(grammarAccess.getExpressionTemporarieAccess().getIDTerminalRuleCall_3_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionTemporarieAccess().getINTTerminalRuleCall_3_1_2()); }
		RULE_INT
		{ after(grammarAccess.getExpressionTemporarieAccess().getINTTerminalRuleCall_3_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE_INDENTIFIER__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVARIABLE_INDENTIFIERAccess().getIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVARIABLE_INDENTIFIERAccess().getIDTerminalRuleCall_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVARIABLE_INDENTIFIERAccess().getINTTerminalRuleCall_1_1_1()); }
		RULE_INT
		{ after(grammarAccess.getVARIABLE_INDENTIFIERAccess().getINTTerminalRuleCall_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastAccess().getSignedKeyword_2_0()); }
		'signed'
		{ after(grammarAccess.getCastAccess().getSignedKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getCastAccess().getUnsignedKeyword_2_1()); }
		'unsigned'
		{ after(grammarAccess.getCastAccess().getUnsignedKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__NameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getNameFloatKeyword_1_0_0()); }
		'float'
		{ after(grammarAccess.getDataTypeAccess().getNameFloatKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getNameIntKeyword_1_0_1()); }
		'int'
		{ after(grammarAccess.getDataTypeAccess().getNameIntKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getNameUint8_tKeyword_1_0_2()); }
		'uint8_t'
		{ after(grammarAccess.getDataTypeAccess().getNameUint8_tKeyword_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getNameInt16_tKeyword_1_0_3()); }
		'int16_t'
		{ after(grammarAccess.getDataTypeAccess().getNameInt16_tKeyword_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getNameCharKeyword_1_0_4()); }
		'char'
		{ after(grammarAccess.getDataTypeAccess().getNameCharKeyword_1_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticOperationAccess().getGroup_0()); }
		(rule__ArithmeticOperation__Group_0__0)
		{ after(grammarAccess.getArithmeticOperationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getArithmeticOperationAccess().getGroup_1()); }
		(rule__ArithmeticOperation__Group_1__0)
		{ after(grammarAccess.getArithmeticOperationAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getArithmeticOperationAccess().getGroup_2()); }
		(rule__ArithmeticOperation__Group_2__0)
		{ after(grammarAccess.getArithmeticOperationAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getArithmeticOperationAccess().getGroup_3()); }
		(rule__ArithmeticOperation__Group_3__0)
		{ after(grammarAccess.getArithmeticOperationAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOperationAccess().getGroup_0()); }
		(rule__BinaryOperation__Group_0__0)
		{ after(grammarAccess.getBinaryOperationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperationAccess().getGroup_1()); }
		(rule__BinaryOperation__Group_1__0)
		{ after(grammarAccess.getBinaryOperationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOperationAccess().getGroup_0()); }
		(rule__LogicalOperation__Group_0__0)
		{ after(grammarAccess.getLogicalOperationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperationAccess().getGroup_1()); }
		(rule__LogicalOperation__Group_1__0)
		{ after(grammarAccess.getLogicalOperationAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperationAccess().getGroup_2()); }
		(rule__LogicalOperation__Group_2__0)
		{ after(grammarAccess.getLogicalOperationAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperationAccess().getGroup_3()); }
		(rule__LogicalOperation__Group_3__0)
		{ after(grammarAccess.getLogicalOperationAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperationAccess().getGroup_4()); }
		(rule__LogicalOperation__Group_4__0)
		{ after(grammarAccess.getLogicalOperationAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperationAccess().getGroup_5()); }
		(rule__LogicalOperation__Group_5__0)
		{ after(grammarAccess.getLogicalOperationAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperationAccess().getGroup_6()); }
		(rule__LogicalOperation__Group_6__0)
		{ after(grammarAccess.getLogicalOperationAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperationAccess().getGroup_7()); }
		(rule__LogicalOperation__Group_7__0)
		{ after(grammarAccess.getLogicalOperationAccess().getGroup_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDef__Group__0__Impl
	rule__FunctionDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefAccess().getFunctionDefAction_0()); }
	()
	{ after(grammarAccess.getFunctionDefAccess().getFunctionDefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDef__Group__1__Impl
	rule__FunctionDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefAccess().getNameAssignment_1()); }
	(rule__FunctionDef__NameAssignment_1)
	{ after(grammarAccess.getFunctionDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDef__Group__2__Impl
	rule__FunctionDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFunctionDefAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDef__Group__3__Impl
	rule__FunctionDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefAccess().getGroup_3()); }
	(rule__FunctionDef__Group_3__0)*
	{ after(grammarAccess.getFunctionDefAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDef__Group__4__Impl
	rule__FunctionDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFunctionDefAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDef__Group__5__Impl
	rule__FunctionDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getFunctionDefAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDef__Group__6__Impl
	rule__FunctionDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefAccess().getCodeBlockAssignment_6()); }
	(rule__FunctionDef__CodeBlockAssignment_6)
	{ after(grammarAccess.getFunctionDefAccess().getCodeBlockAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDef__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getFunctionDefAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDef__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDef__Group_3__0__Impl
	rule__FunctionDef__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefAccess().getFunctionparamAssignment_3_0()); }
	(rule__FunctionDef__FunctionparamAssignment_3_0)
	{ after(grammarAccess.getFunctionDefAccess().getFunctionparamAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDef__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefAccess().getCommaKeyword_3_1()); }
	(',')?
	{ after(grammarAccess.getFunctionDefAccess().getCommaKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CodeBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__0__Impl
	rule__CodeBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getCodeBlockAction_0()); }
	()
	{ after(grammarAccess.getCodeBlockAccess().getCodeBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__1__Impl
	rule__CodeBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getInstructionAssignment_1()); }
	(rule__CodeBlock__InstructionAssignment_1)*
	{ after(grammarAccess.getCodeBlockAccess().getInstructionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getReturnKeyword_2()); }
	('return;')?
	{ after(grammarAccess.getCodeBlockAccess().getReturnKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getFunctionCallAction_0()); }
	()
	{ after(grammarAccess.getFunctionCallAccess().getFunctionCallAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getCalledFunctionAssignment_1()); }
	(rule__FunctionCall__CalledFunctionAssignment_1)
	{ after(grammarAccess.getFunctionCallAccess().getCalledFunctionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__3__Impl
	rule__FunctionCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getGroup_3()); }
	(rule__FunctionCall__Group_3__0)*
	{ after(grammarAccess.getFunctionCallAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__4__Impl
	rule__FunctionCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getFunctionCallAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_3__0__Impl
	rule__FunctionCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getFunctionArgumentAssignment_3_0()); }
	(rule__FunctionCall__FunctionArgumentAssignment_3_0)
	{ after(grammarAccess.getFunctionCallAccess().getFunctionArgumentAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_3_1()); }
	(',')?
	{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionParam__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParam__Group_0__0__Impl
	rule__FunctionParam__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParamAccess().getFunctionParamAction_0_0()); }
	()
	{ after(grammarAccess.getFunctionParamAccess().getFunctionParamAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParam__Group_0__1__Impl
	rule__FunctionParam__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParamAccess().getStructKeyword_0_1()); }
	'struct'
	{ after(grammarAccess.getFunctionParamAccess().getStructKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParam__Group_0__2__Impl
	rule__FunctionParam__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParamAccess().getIDTerminalRuleCall_0_2()); }
	RULE_ID
	{ after(grammarAccess.getFunctionParamAccess().getIDTerminalRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParam__Group_0__3__Impl
	rule__FunctionParam__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParamAccess().getAsteriskKeyword_0_3()); }
	('*')?
	{ after(grammarAccess.getFunctionParamAccess().getAsteriskKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParam__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParamAccess().getIDTerminalRuleCall_0_4()); }
	RULE_ID
	{ after(grammarAccess.getFunctionParamAccess().getIDTerminalRuleCall_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionParam__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParam__Group_1__0__Impl
	rule__FunctionParam__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParamAccess().getDatatypeAssignment_1_0()); }
	(rule__FunctionParam__DatatypeAssignment_1_0)
	{ after(grammarAccess.getFunctionParamAccess().getDatatypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParam__Group_1__1__Impl
	rule__FunctionParam__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParamAccess().getAsteriskKeyword_1_1()); }
	('*')?
	{ after(grammarAccess.getFunctionParamAccess().getAsteriskKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParam__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParamAccess().getNameAssignment_1_2()); }
	(rule__FunctionParam__NameAssignment_1_2)
	{ after(grammarAccess.getFunctionParamAccess().getNameAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionArgument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArgument__Group__0__Impl
	rule__FunctionArgument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentAccess().getFunctionArgumentAction_0()); }
	()
	{ after(grammarAccess.getFunctionArgumentAccess().getFunctionArgumentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArgument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentAccess().getNameAssignment_1()); }
	(rule__FunctionArgument__NameAssignment_1)
	{ after(grammarAccess.getFunctionArgumentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group_0__0__Impl
	rule__Argument__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getArgumentAction_0_0()); }
	()
	{ after(grammarAccess.getArgumentAccess().getArgumentAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getGroup_0_1()); }
	(rule__Argument__Group_0_1__0)
	{ after(grammarAccess.getArgumentAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group_0_1__0__Impl
	rule__Argument__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getAmpersandKeyword_0_1_0()); }
	('&')?
	{ after(grammarAccess.getArgumentAccess().getAmpersandKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group_0_1__1__Impl
	rule__Argument__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getNameAssignment_0_1_1()); }
	(rule__Argument__NameAssignment_0_1_1)
	{ after(grammarAccess.getArgumentAccess().getNameAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getGroup_0_1_2()); }
	(rule__Argument__Group_0_1_2__0)*
	{ after(grammarAccess.getArgumentAccess().getGroup_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_0_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group_0_1_2__0__Impl
	rule__Argument__Group_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_0_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getFullStopKeyword_0_1_2_0()); }
	'.'
	{ after(grammarAccess.getArgumentAccess().getFullStopKeyword_0_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_0_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group_0_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_0_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getIDTerminalRuleCall_0_1_2_1()); }
	RULE_ID
	{ after(grammarAccess.getArgumentAccess().getIDTerminalRuleCall_0_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group_1__0__Impl
	rule__Argument__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getArgumentAction_1_0()); }
	()
	{ after(grammarAccess.getArgumentAccess().getArgumentAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
	{ after(grammarAccess.getArgumentAccess().getINTTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructVariableCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructVariableCall__Group__0__Impl
	rule__StructVariableCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariableCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructVariableCallAccess().getCalledStructVariableAssignment_0()); }
	(rule__StructVariableCall__CalledStructVariableAssignment_0)
	{ after(grammarAccess.getStructVariableCallAccess().getCalledStructVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariableCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructVariableCall__Group__1__Impl
	rule__StructVariableCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariableCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructVariableCallAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getStructVariableCallAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariableCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructVariableCall__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariableCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructVariableCallAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
	{ after(grammarAccess.getStructVariableCallAccess().getIDTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct__Group__0__Impl
	rule__Struct__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructAccess().getStructAction_0()); }
	()
	{ after(grammarAccess.getStructAccess().getStructAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct__Group__1__Impl
	rule__Struct__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructAccess().getStructKeyword_1()); }
	'struct'
	{ after(grammarAccess.getStructAccess().getStructKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct__Group__2__Impl
	rule__Struct__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructAccess().getNameAssignment_2()); }
	(rule__Struct__NameAssignment_2)
	{ after(grammarAccess.getStructAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct__Group__3__Impl
	rule__Struct__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructAccess().getAsteriskKeyword_3()); }
	('*')?
	{ after(grammarAccess.getStructAccess().getAsteriskKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct__Group__4__Impl
	rule__Struct__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructAccess().getAnotherAssignment_4()); }
	(rule__Struct__AnotherAssignment_4)
	{ after(grammarAccess.getStructAccess().getAnotherAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getStructAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Goto__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goto__Group__0__Impl
	rule__Goto__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Goto__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotoAccess().getGotoAction_0()); }
	()
	{ after(grammarAccess.getGotoAccess().getGotoAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goto__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goto__Group__1__Impl
	rule__Goto__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Goto__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotoAccess().getGotoKeyword_1()); }
	'goto'
	{ after(grammarAccess.getGotoAccess().getGotoKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goto__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goto__Group__2__Impl
	rule__Goto__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Goto__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotoAccess().getGotoAssignment_2()); }
	(rule__Goto__GotoAssignment_2)
	{ after(grammarAccess.getGotoAccess().getGotoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goto__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goto__Group__3__Impl
	rule__Goto__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Goto__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotoAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getGotoAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goto__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goto__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Goto__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotoAccess().getINVKeyword_4()); }
	'[INV]'
	{ after(grammarAccess.getGotoAccess().getINVKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LabelDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabelDef__Group__0__Impl
	rule__LabelDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelDefAccess().getLabelDefAction_0()); }
	()
	{ after(grammarAccess.getLabelDefAccess().getLabelDefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabelDef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelDefAccess().getNameAssignment_1()); }
	(rule__LabelDef__NameAssignment_1)
	{ after(grammarAccess.getLabelDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatment__Group__0__Impl
	rule__SwitchStatment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatmentAccess().getSwitchKeyword_0()); }
	'switch'
	{ after(grammarAccess.getSwitchStatmentAccess().getSwitchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatment__Group__1__Impl
	rule__SwitchStatment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatmentAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSwitchStatmentAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatment__Group__2__Impl
	rule__SwitchStatment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatmentAccess().getTempVariableRefAssignment_2()); }
	(rule__SwitchStatment__TempVariableRefAssignment_2)
	{ after(grammarAccess.getSwitchStatmentAccess().getTempVariableRefAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatment__Group__3__Impl
	rule__SwitchStatment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatmentAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSwitchStatmentAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatment__Group__4__Impl
	rule__SwitchStatment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatmentAccess().getLessThanSignKeyword_4()); }
	'<'
	{ after(grammarAccess.getSwitchStatmentAccess().getLessThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatment__Group__5__Impl
	rule__SwitchStatment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatmentAccess().getSwitchDefaultCaseAssignment_5()); }
	(rule__SwitchStatment__SwitchDefaultCaseAssignment_5)
	{ after(grammarAccess.getSwitchStatmentAccess().getSwitchDefaultCaseAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatment__Group__6__Impl
	rule__SwitchStatment__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatmentAccess().getSwitchCase1Assignment_6()); }
	(rule__SwitchStatment__SwitchCase1Assignment_6)*
	{ after(grammarAccess.getSwitchStatmentAccess().getSwitchCase1Assignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatment__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatmentAccess().getGreaterThanSignKeyword_7()); }
	'>'
	{ after(grammarAccess.getSwitchStatmentAccess().getGreaterThanSignKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchDefaultCase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchDefaultCase__Group__0__Impl
	rule__SwitchDefaultCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultCase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchDefaultCaseAccess().getNameAssignment_0()); }
	(rule__SwitchDefaultCase__NameAssignment_0)
	{ after(grammarAccess.getSwitchDefaultCaseAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultCase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchDefaultCase__Group__1__Impl
	rule__SwitchDefaultCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultCase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchDefaultCaseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getSwitchDefaultCaseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultCase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchDefaultCase__Group__2__Impl
	rule__SwitchDefaultCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultCase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchDefaultCaseAccess().getSwitchLabelAssignment_2()); }
	(rule__SwitchDefaultCase__SwitchLabelAssignment_2)
	{ after(grammarAccess.getSwitchDefaultCaseAccess().getSwitchLabelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultCase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchDefaultCase__Group__3__Impl
	rule__SwitchDefaultCase__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultCase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchDefaultCaseAccess().getINVKeyword_3()); }
	('[INV]')?
	{ after(grammarAccess.getSwitchDefaultCaseAccess().getINVKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultCase__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchDefaultCase__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultCase__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchDefaultCaseAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getSwitchDefaultCaseAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchCase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchCase__Group__0__Impl
	rule__SwitchCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchCaseAccess().getNameAssignment_0()); }
	(rule__SwitchCase__NameAssignment_0)
	{ after(grammarAccess.getSwitchCaseAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchCase__Group__1__Impl
	rule__SwitchCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchCaseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getSwitchCaseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchCase__Group__2__Impl
	rule__SwitchCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchCaseAccess().getSwitchLabelAssignment_2()); }
	(rule__SwitchCase__SwitchLabelAssignment_2)
	{ after(grammarAccess.getSwitchCaseAccess().getSwitchLabelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchCase__Group__3__Impl
	rule__SwitchCase__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchCaseAccess().getINVKeyword_3()); }
	('[INV]')?
	{ after(grammarAccess.getSwitchCaseAccess().getINVKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchCase__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchCaseAccess().getCommaKeyword_4()); }
	(',')?
	{ after(grammarAccess.getSwitchCaseAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchLabel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchLabel__Group__0__Impl
	rule__SwitchLabel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchLabel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchLabelAccess().getNameAssignment_0()); }
	(rule__SwitchLabel__NameAssignment_0)
	{ after(grammarAccess.getSwitchLabelAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchLabel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchLabel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchLabel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchLabelAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getSwitchLabelAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QNSL__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QNSL__Group__0__Impl
	rule__QNSL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QNSL__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQNSLAccess().getLessThanSignKeyword_0()); }
	'<'
	{ after(grammarAccess.getQNSLAccess().getLessThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QNSL__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QNSL__Group__1__Impl
	rule__QNSL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QNSL__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQNSLAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
	{ after(grammarAccess.getQNSLAccess().getIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QNSL__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QNSL__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QNSL__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQNSLAccess().getGreaterThanSignKeyword_2()); }
	'>'
	{ after(grammarAccess.getQNSLAccess().getGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__0__Impl
	rule__Label__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getLabelAction_0()); }
	()
	{ after(grammarAccess.getLabelAccess().getLabelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__1__Impl
	rule__Label__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getNameAssignment_1()); }
	(rule__Label__NameAssignment_1)
	{ after(grammarAccess.getLabelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getLabelAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getLessThanSignKeyword_0()); }
	'<'
	{ after(grammarAccess.getQualifiedNameAccess().getLessThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
	rule__QualifiedName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__2__Impl
	rule__QualifiedName__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getQualifiedNameAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getQualifiedNameAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__0__Impl
	rule__If__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__1__Impl
	rule__If__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIfAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__2__Impl
	rule__If__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getBooleanExpressionParserRuleCall_2()); }
	ruleBooleanExpression
	{ after(grammarAccess.getIfAccess().getBooleanExpressionParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__3__Impl
	rule__If__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getIfAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getAlternatives_4()); }
	(rule__If__Alternatives_4)
	{ after(grammarAccess.getIfAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_4_1__0__Impl
	rule__If__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getLeftCurlyBracketKeyword_4_1_0()); }
	'{'
	{ after(grammarAccess.getIfAccess().getLeftCurlyBracketKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_4_1__1__Impl
	rule__If__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getCodeBlockAssignment_4_1_1()); }
	(rule__If__CodeBlockAssignment_4_1_1)
	{ after(grammarAccess.getIfAccess().getCodeBlockAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_4_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_4_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getRightCurlyBracketKeyword_4_1_2()); }
	'}'
	{ after(grammarAccess.getIfAccess().getRightCurlyBracketKeyword_4_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignOperation__Group__0__Impl
	rule__AssignOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignOperationAccess().getAssignOperationAction_0()); }
	()
	{ after(grammarAccess.getAssignOperationAccess().getAssignOperationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignOperation__Group__1__Impl
	rule__AssignOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignOperationAccess().getAlternatives_1()); }
	(rule__AssignOperation__Alternatives_1)
	{ after(grammarAccess.getAssignOperationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignOperation__Group__2__Impl
	rule__AssignOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignOperationAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getAssignOperationAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignOperation__Group__3__Impl
	rule__AssignOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignOperationAccess().getCastAssignment_3()); }
	(rule__AssignOperation__CastAssignment_3)?
	{ after(grammarAccess.getAssignOperationAccess().getCastAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignOperation__Group__4__Impl
	rule__AssignOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignOperationAccess().getAlternatives_4()); }
	(rule__AssignOperation__Alternatives_4)*
	{ after(grammarAccess.getAssignOperationAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignOperation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignOperationAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getAssignOperationAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignOperation__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignOperation__Group_4_0__0__Impl
	rule__AssignOperation__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignOperationAccess().getAlternatives_4_0_0()); }
	(rule__AssignOperation__Alternatives_4_0_0)
	{ after(grammarAccess.getAssignOperationAccess().getAlternatives_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignOperation__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignOperationAccess().getGroup_4_0_1()); }
	(rule__AssignOperation__Group_4_0_1__0)
	{ after(grammarAccess.getAssignOperationAccess().getGroup_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignOperation__Group_4_0_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignOperation__Group_4_0_0_3__0__Impl
	rule__AssignOperation__Group_4_0_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group_4_0_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignOperationAccess().getAmpersandKeyword_4_0_0_3_0()); }
	'&'
	{ after(grammarAccess.getAssignOperationAccess().getAmpersandKeyword_4_0_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group_4_0_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignOperation__Group_4_0_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group_4_0_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignOperationAccess().getCLOBBERKeyword_4_0_0_3_1()); }
	'{CLOBBER}'
	{ after(grammarAccess.getAssignOperationAccess().getCLOBBERKeyword_4_0_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignOperation__Group_4_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignOperation__Group_4_0_1__0__Impl
	rule__AssignOperation__Group_4_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group_4_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignOperationAccess().getHyphenMinusGreaterThanSignKeyword_4_0_1_0()); }
	'->'
	{ after(grammarAccess.getAssignOperationAccess().getHyphenMinusGreaterThanSignKeyword_4_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group_4_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignOperation__Group_4_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__Group_4_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignOperationAccess().getIDTerminalRuleCall_4_0_1_1()); }
	RULE_ID
	{ after(grammarAccess.getAssignOperationAccess().getIDTerminalRuleCall_4_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDelaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDelaration__Group__0__Impl
	rule__ConstantDelaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDelaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDelarationAccess().getConstKeyword_0()); }
	'const'
	{ after(grammarAccess.getConstantDelarationAccess().getConstKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDelaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDelaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDelaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDelarationAccess().getNameAssignment_1()); }
	(rule__ConstantDelaration__NameAssignment_1)
	{ after(grammarAccess.getConstantDelarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_0()); }
	(rule__VariableDeclaration__TypeAssignment_0)
	{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1()); }
	(rule__VariableDeclaration__NameAssignment_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionTemporarie__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTemporarie__Group__0__Impl
	rule__ExpressionTemporarie__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTemporarieAccess().getTempVariableLAssignment_0()); }
	(rule__ExpressionTemporarie__TempVariableLAssignment_0)
	{ after(grammarAccess.getExpressionTemporarieAccess().getTempVariableLAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTemporarie__Group__1__Impl
	rule__ExpressionTemporarie__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTemporarieAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getExpressionTemporarieAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTemporarie__Group__2__Impl
	rule__ExpressionTemporarie__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTemporarieAccess().getAlternatives_2()); }
	(rule__ExpressionTemporarie__Alternatives_2)
	{ after(grammarAccess.getExpressionTemporarieAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTemporarie__Group__3__Impl
	rule__ExpressionTemporarie__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTemporarieAccess().getGroup_3()); }
	(rule__ExpressionTemporarie__Group_3__0)*
	{ after(grammarAccess.getExpressionTemporarieAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTemporarie__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTemporarieAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getExpressionTemporarieAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionTemporarie__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTemporarie__Group_3__0__Impl
	rule__ExpressionTemporarie__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTemporarieAccess().getArithmeticOperationAssignment_3_0()); }
	(rule__ExpressionTemporarie__ArithmeticOperationAssignment_3_0)
	{ after(grammarAccess.getExpressionTemporarieAccess().getArithmeticOperationAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTemporarie__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTemporarieAccess().getAlternatives_3_1()); }
	(rule__ExpressionTemporarie__Alternatives_3_1)
	{ after(grammarAccess.getExpressionTemporarieAccess().getAlternatives_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VARIABLE_INDENTIFIER__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VARIABLE_INDENTIFIER__Group__0__Impl
	rule__VARIABLE_INDENTIFIER__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE_INDENTIFIER__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVARIABLE_INDENTIFIERAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getVARIABLE_INDENTIFIERAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE_INDENTIFIER__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VARIABLE_INDENTIFIER__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE_INDENTIFIER__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVARIABLE_INDENTIFIERAccess().getGroup_1()); }
	(rule__VARIABLE_INDENTIFIER__Group_1__0)*
	{ after(grammarAccess.getVARIABLE_INDENTIFIERAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VARIABLE_INDENTIFIER__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VARIABLE_INDENTIFIER__Group_1__0__Impl
	rule__VARIABLE_INDENTIFIER__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE_INDENTIFIER__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVARIABLE_INDENTIFIERAccess().get_Keyword_1_0()); }
	'_'
	{ after(grammarAccess.getVARIABLE_INDENTIFIERAccess().get_Keyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE_INDENTIFIER__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VARIABLE_INDENTIFIER__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE_INDENTIFIER__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVARIABLE_INDENTIFIERAccess().getAlternatives_1_1()); }
	(rule__VARIABLE_INDENTIFIER__Alternatives_1_1)
	{ after(grammarAccess.getVARIABLE_INDENTIFIERAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
	()
	{ after(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
	(rule__Function__NameAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast__Group__0__Impl
	rule__Cast__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getCastAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast__Group__1__Impl
	rule__Cast__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastAccess().getShortKeyword_1()); }
	('short')?
	{ after(grammarAccess.getCastAccess().getShortKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast__Group__2__Impl
	rule__Cast__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastAccess().getAlternatives_2()); }
	(rule__Cast__Alternatives_2)?
	{ after(grammarAccess.getCastAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast__Group__3__Impl
	rule__Cast__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastAccess().getDataTypeParserRuleCall_3()); }
	ruleDataType
	{ after(grammarAccess.getCastAccess().getDataTypeParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getCastAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getDataTypeAction_0()); }
	()
	{ after(grammarAccess.getDataTypeAccess().getDataTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
	(rule__DataType__NameAssignment_1)
	{ after(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group__0__Impl
	rule__BooleanExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getBooleanExpressionAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group__1__Impl
	rule__BooleanExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getLogicalOperationParserRuleCall_1()); }
	ruleLogicalOperation
	{ after(grammarAccess.getBooleanExpressionAccess().getLogicalOperationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getBooleanExpressionAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticOperation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticOperation__Group_0__0__Impl
	rule__ArithmeticOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticOperationAccess().getArithmeticOperationAction_0_0()); }
	()
	{ after(grammarAccess.getArithmeticOperationAccess().getArithmeticOperationAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticOperation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticOperationAccess().getPlusSignKeyword_0_1()); }
	'+'
	{ after(grammarAccess.getArithmeticOperationAccess().getPlusSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticOperation__Group_1__0__Impl
	rule__ArithmeticOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticOperationAccess().getArithmeticOperationAction_1_0()); }
	()
	{ after(grammarAccess.getArithmeticOperationAccess().getArithmeticOperationAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticOperation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticOperationAccess().getHyphenMinusKeyword_1_1()); }
	'-'
	{ after(grammarAccess.getArithmeticOperationAccess().getHyphenMinusKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticOperation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticOperation__Group_2__0__Impl
	rule__ArithmeticOperation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticOperationAccess().getArithmeticOperationAction_2_0()); }
	()
	{ after(grammarAccess.getArithmeticOperationAccess().getArithmeticOperationAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticOperation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticOperationAccess().getAsteriskKeyword_2_1()); }
	'*'
	{ after(grammarAccess.getArithmeticOperationAccess().getAsteriskKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticOperation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticOperation__Group_3__0__Impl
	rule__ArithmeticOperation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticOperationAccess().getArithmeticOperationAction_3_0()); }
	()
	{ after(grammarAccess.getArithmeticOperationAccess().getArithmeticOperationAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticOperation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticOperation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticOperationAccess().getSolidusKeyword_3_1()); }
	'/'
	{ after(grammarAccess.getArithmeticOperationAccess().getSolidusKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperation__Group_0__0__Impl
	rule__BinaryOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationAccess().getBinaryOperationAction_0_0()); }
	()
	{ after(grammarAccess.getBinaryOperationAccess().getBinaryOperationAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationAccess().getAmpersandKeyword_0_1()); }
	'&'
	{ after(grammarAccess.getBinaryOperationAccess().getAmpersandKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperation__Group_1__0__Impl
	rule__BinaryOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationAccess().getBinaryOperationAction_1_0()); }
	()
	{ after(grammarAccess.getBinaryOperationAccess().getBinaryOperationAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationAccess().getVerticalLineKeyword_1_1()); }
	'|'
	{ after(grammarAccess.getBinaryOperationAccess().getVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOperation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperation__Group_0__0__Impl
	rule__LogicalOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_0_0()); }
	()
	{ after(grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperationAccess().getAndKeyword_0_1()); }
	'and'
	{ after(grammarAccess.getLogicalOperationAccess().getAndKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperation__Group_1__0__Impl
	rule__LogicalOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperationAccess().getOrKeyword_1_1()); }
	'or'
	{ after(grammarAccess.getLogicalOperationAccess().getOrKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOperation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperation__Group_2__0__Impl
	rule__LogicalOperation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_2_0()); }
	()
	{ after(grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperationAccess().getEqualsSignLessThanSignKeyword_2_1()); }
	'=<'
	{ after(grammarAccess.getLogicalOperationAccess().getEqualsSignLessThanSignKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOperation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperation__Group_3__0__Impl
	rule__LogicalOperation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_3_0()); }
	()
	{ after(grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperationAccess().getLessThanSignKeyword_3_1()); }
	'<'
	{ after(grammarAccess.getLogicalOperationAccess().getLessThanSignKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOperation__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperation__Group_4__0__Impl
	rule__LogicalOperation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_4_0()); }
	()
	{ after(grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperationAccess().getGreaterThanSignKeyword_4_1()); }
	'>'
	{ after(grammarAccess.getLogicalOperationAccess().getGreaterThanSignKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOperation__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperation__Group_5__0__Impl
	rule__LogicalOperation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_5_0()); }
	()
	{ after(grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperation__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperationAccess().getEqualsSignGreaterThanSignKeyword_5_1()); }
	'=>'
	{ after(grammarAccess.getLogicalOperationAccess().getEqualsSignGreaterThanSignKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOperation__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperation__Group_6__0__Impl
	rule__LogicalOperation__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_6_0()); }
	()
	{ after(grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperation__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperationAccess().getEqualsSignEqualsSignKeyword_6_1()); }
	'=='
	{ after(grammarAccess.getLogicalOperationAccess().getEqualsSignEqualsSignKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOperation__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperation__Group_7__0__Impl
	rule__LogicalOperation__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_7_0()); }
	()
	{ after(grammarAccess.getLogicalOperationAccess().getLogicalOperationAction_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperation__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperation__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperationAccess().getExclamationMarkEqualsSignKeyword_7_1()); }
	'!='
	{ after(grammarAccess.getLogicalOperationAccess().getExclamationMarkEqualsSignKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TAC__FunctionDefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTACAccess().getFunctionDefFunctionDefParserRuleCall_0_0()); }
		ruleFunctionDef
		{ after(grammarAccess.getTACAccess().getFunctionDefFunctionDefParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TAC__CommentLineAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTACAccess().getCommentLineCommentLineParserRuleCall_1_0()); }
		ruleCommentLine
		{ after(grammarAccess.getTACAccess().getCommentLineCommentLineParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefAccess().getNameFunctionParserRuleCall_1_0()); }
		ruleFunction
		{ after(grammarAccess.getFunctionDefAccess().getNameFunctionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__FunctionparamAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefAccess().getFunctionparamFunctionParamParserRuleCall_3_0_0()); }
		ruleFunctionParam
		{ after(grammarAccess.getFunctionDefAccess().getFunctionparamFunctionParamParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDef__CodeBlockAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefAccess().getCodeBlockCodeBlockParserRuleCall_6_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getFunctionDefAccess().getCodeBlockCodeBlockParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__InstructionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockAccess().getInstructionInstructionParserRuleCall_1_0()); }
		ruleInstruction
		{ after(grammarAccess.getCodeBlockAccess().getInstructionInstructionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__VariableDeclarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getVariableDeclarationVariableDeclarationParserRuleCall_0_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getInstructionAccess().getVariableDeclarationVariableDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__VaraibleCallAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getVaraibleCallVariableCallParserRuleCall_1_0()); }
		ruleVariableCall
		{ after(grammarAccess.getInstructionAccess().getVaraibleCallVariableCallParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__ConstantDelarationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getConstantDelarationConstantDelarationParserRuleCall_2_0()); }
		ruleConstantDelaration
		{ after(grammarAccess.getInstructionAccess().getConstantDelarationConstantDelarationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__TempVariableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getTempVariableTempVariableParserRuleCall_3_0()); }
		ruleTempVariable
		{ after(grammarAccess.getInstructionAccess().getTempVariableTempVariableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__StructAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getStructStructParserRuleCall_4_0()); }
		ruleStruct
		{ after(grammarAccess.getInstructionAccess().getStructStructParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__LabelDefAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getLabelDefLabelDefParserRuleCall_5_0()); }
		ruleLabelDef
		{ after(grammarAccess.getInstructionAccess().getLabelDefLabelDefParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__SwitchLabelDefAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getSwitchLabelDefSwitchLabelDefParserRuleCall_6_0()); }
		ruleSwitchLabelDef
		{ after(grammarAccess.getInstructionAccess().getSwitchLabelDefSwitchLabelDefParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__GotoAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getGotoGotoParserRuleCall_7_0()); }
		ruleGoto
		{ after(grammarAccess.getInstructionAccess().getGotoGotoParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__IfAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getIfIfParserRuleCall_8_0()); }
		ruleIf
		{ after(grammarAccess.getInstructionAccess().getIfIfParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__ExpressionTemporarieAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getExpressionTemporarieExpressionTemporarieParserRuleCall_9_0()); }
		ruleExpressionTemporarie
		{ after(grammarAccess.getInstructionAccess().getExpressionTemporarieExpressionTemporarieParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__SwitchStatementAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getSwitchStatementSwitchStatmentParserRuleCall_10_0()); }
		ruleSwitchStatment
		{ after(grammarAccess.getInstructionAccess().getSwitchStatementSwitchStatmentParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__DebugTagAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getDebugTagDebugTagParserRuleCall_11_0()); }
		ruleDebugTag
		{ after(grammarAccess.getInstructionAccess().getDebugTagDebugTagParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__FunctionCallAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getFunctionCallFunctionCallParserRuleCall_12_0()); }
		ruleFunctionCall
		{ after(grammarAccess.getInstructionAccess().getFunctionCallFunctionCallParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__AssignOpAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getAssignOpAssignOperationParserRuleCall_13_0()); }
		ruleAssignOperation
		{ after(grammarAccess.getInstructionAccess().getAssignOpAssignOperationParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__CalledFunctionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getCalledFunctionFunctionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getFunctionCallAccess().getCalledFunctionFunctionIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFunctionCallAccess().getCalledFunctionFunctionIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getFunctionCallAccess().getCalledFunctionFunctionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__FunctionArgumentAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getFunctionArgumentFunctionArgumentParserRuleCall_3_0_0()); }
		ruleFunctionArgument
		{ after(grammarAccess.getFunctionCallAccess().getFunctionArgumentFunctionArgumentParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__DatatypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionParamAccess().getDatatypeDataTypeParserRuleCall_1_0_0()); }
		ruleDataType
		{ after(grammarAccess.getFunctionParamAccess().getDatatypeDataTypeParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParam__NameAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionParamAccess().getNameIDTerminalRuleCall_1_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionParamAccess().getNameIDTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArgument__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionArgumentAccess().getNameArgumentParserRuleCall_1_0()); }
		ruleArgument
		{ after(grammarAccess.getFunctionArgumentAccess().getNameArgumentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__NameAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_0_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariableCall__CalledStructVariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructVariableCallAccess().getCalledStructVariableStructCrossReference_0_0()); }
		(
			{ before(grammarAccess.getStructVariableCallAccess().getCalledStructVariableStructIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStructVariableCallAccess().getCalledStructVariableStructIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getStructVariableCallAccess().getCalledStructVariableStructCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStructAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__AnotherAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructAccess().getAnotherIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getStructAccess().getAnotherIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goto__GotoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGotoAccess().getGotoLabelCrossReference_2_0()); }
		(
			{ before(grammarAccess.getGotoAccess().getGotoLabelQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getGotoAccess().getGotoLabelQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getGotoAccess().getGotoLabelCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelDefAccess().getNameLabelParserRuleCall_1_0()); }
		ruleLabel
		{ after(grammarAccess.getLabelDefAccess().getNameLabelParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__TempVariableRefAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStatmentAccess().getTempVariableRefTempVariableCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSwitchStatmentAccess().getTempVariableRefTempVariableTEMP_VARIABLE_PATTERNTerminalRuleCall_2_0_1()); }
			RULE_TEMP_VARIABLE_PATTERN
			{ after(grammarAccess.getSwitchStatmentAccess().getTempVariableRefTempVariableTEMP_VARIABLE_PATTERNTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSwitchStatmentAccess().getTempVariableRefTempVariableCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__SwitchDefaultCaseAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStatmentAccess().getSwitchDefaultCaseSwitchDefaultCaseParserRuleCall_5_0()); }
		ruleSwitchDefaultCase
		{ after(grammarAccess.getSwitchStatmentAccess().getSwitchDefaultCaseSwitchDefaultCaseParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatment__SwitchCase1Assignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStatmentAccess().getSwitchCase1SwitchCaseParserRuleCall_6_0()); }
		ruleSwitchCase
		{ after(grammarAccess.getSwitchStatmentAccess().getSwitchCase1SwitchCaseParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultCase__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchDefaultCaseAccess().getNameDefaultKeyword_0_0()); }
		(
			{ before(grammarAccess.getSwitchDefaultCaseAccess().getNameDefaultKeyword_0_0()); }
			'default'
			{ after(grammarAccess.getSwitchDefaultCaseAccess().getNameDefaultKeyword_0_0()); }
		)
		{ after(grammarAccess.getSwitchDefaultCaseAccess().getNameDefaultKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultCase__SwitchLabelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchDefaultCaseAccess().getSwitchLabelSwitchLabelCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSwitchDefaultCaseAccess().getSwitchLabelSwitchLabelQNSLParserRuleCall_2_0_1()); }
			ruleQNSL
			{ after(grammarAccess.getSwitchDefaultCaseAccess().getSwitchLabelSwitchLabelQNSLParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSwitchDefaultCaseAccess().getSwitchLabelSwitchLabelCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchCaseAccess().getNameCASE_IDTerminalRuleCall_0_0()); }
		RULE_CASE_ID
		{ after(grammarAccess.getSwitchCaseAccess().getNameCASE_IDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__SwitchLabelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchCaseAccess().getSwitchLabelSwitchLabelCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSwitchCaseAccess().getSwitchLabelSwitchLabelQNSLParserRuleCall_2_0_1()); }
			ruleQNSL
			{ after(grammarAccess.getSwitchCaseAccess().getSwitchLabelSwitchLabelQNSLParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSwitchCaseAccess().getSwitchLabelSwitchLabelCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchLabelDef__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchLabelDefAccess().getNameSwitchLabelParserRuleCall_0()); }
		ruleSwitchLabel
		{ after(grammarAccess.getSwitchLabelDefAccess().getNameSwitchLabelParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchLabel__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchLabelAccess().getNameQNSLParserRuleCall_0_0()); }
		ruleQNSL
		{ after(grammarAccess.getSwitchLabelAccess().getNameQNSLParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getLabelAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__InstructionAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getInstructionInstructionParserRuleCall_4_0_0()); }
		ruleInstruction
		{ after(grammarAccess.getIfAccess().getInstructionInstructionParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__CodeBlockAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getCodeBlockCodeBlockParserRuleCall_4_1_1_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getIfAccess().getCodeBlockCodeBlockParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignOperationAccess().getNameVariableCallParserRuleCall_1_0_0()); }
		ruleVariableCall
		{ after(grammarAccess.getAssignOperationAccess().getNameVariableCallParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignOperationAccess().getNameTempVariableParserRuleCall_1_1_0()); }
		ruleTempVariable
		{ after(grammarAccess.getAssignOperationAccess().getNameTempVariableParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__NameAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignOperationAccess().getNameStructVariableCallParserRuleCall_1_2_0()); }
		ruleStructVariableCall
		{ after(grammarAccess.getAssignOperationAccess().getNameStructVariableCallParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__CastAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignOperationAccess().getCastCastParserRuleCall_3_0()); }
		ruleCast
		{ after(grammarAccess.getAssignOperationAccess().getCastCastParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__VcallAssignment_4_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignOperationAccess().getVcallVariableCallParserRuleCall_4_0_0_0_0()); }
		ruleVariableCall
		{ after(grammarAccess.getAssignOperationAccess().getVcallVariableCallParserRuleCall_4_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__TempVariableAssignment_4_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignOperationAccess().getTempVariableTempVariableParserRuleCall_4_0_0_1_0()); }
		ruleTempVariable
		{ after(grammarAccess.getAssignOperationAccess().getTempVariableTempVariableParserRuleCall_4_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__FunctionCallAssignment_4_0_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignOperationAccess().getFunctionCallFunctionCallParserRuleCall_4_0_0_4_0()); }
		ruleFunctionCall
		{ after(grammarAccess.getAssignOperationAccess().getFunctionCallFunctionCallParserRuleCall_4_0_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__ArithmeticOperationAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignOperationAccess().getArithmeticOperationArithmeticOperationParserRuleCall_4_1_0()); }
		ruleArithmeticOperation
		{ after(grammarAccess.getAssignOperationAccess().getArithmeticOperationArithmeticOperationParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignOperation__BinaryOperationAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignOperationAccess().getBinaryOperationBinaryOperationParserRuleCall_4_2_0()); }
		ruleBinaryOperation
		{ after(grammarAccess.getAssignOperationAccess().getBinaryOperationBinaryOperationParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDelaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantDelarationAccess().getNameLocalVariableParserRuleCall_1_0()); }
		ruleLocalVariable
		{ after(grammarAccess.getConstantDelarationAccess().getNameLocalVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableCall__CalledVaraibleAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableCallAccess().getCalledVaraibleLocalVariableCrossReference_0()); }
		(
			{ before(grammarAccess.getVariableCallAccess().getCalledVaraibleLocalVariableIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableCallAccess().getCalledVaraibleLocalVariableIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getVariableCallAccess().getCalledVaraibleLocalVariableCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getTypeDataTypeParserRuleCall_0_0()); }
		ruleDataType
		{ after(grammarAccess.getVariableDeclarationAccess().getTypeDataTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNameLocalVariableParserRuleCall_1_0()); }
		ruleLocalVariable
		{ after(grammarAccess.getVariableDeclarationAccess().getNameLocalVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__TempVariableLAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionTemporarieAccess().getTempVariableLTempVariableParserRuleCall_0_0()); }
		ruleTempVariable
		{ after(grammarAccess.getExpressionTemporarieAccess().getTempVariableLTempVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__TempVariableR1Assignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionTemporarieAccess().getTempVariableR1TempVariableParserRuleCall_2_0_0()); }
		ruleTempVariable
		{ after(grammarAccess.getExpressionTemporarieAccess().getTempVariableR1TempVariableParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__ArithmeticOperationAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionTemporarieAccess().getArithmeticOperationArithmeticOperationParserRuleCall_3_0_0()); }
		ruleArithmeticOperation
		{ after(grammarAccess.getExpressionTemporarieAccess().getArithmeticOperationArithmeticOperationParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTemporarie__TempVariableR2Assignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionTemporarieAccess().getTempVariableR2TempVariableParserRuleCall_3_1_0_0()); }
		ruleTempVariable
		{ after(grammarAccess.getExpressionTemporarieAccess().getTempVariableR2TempVariableParserRuleCall_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempVariable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempVariableAccess().getNameTEMP_VARIABLE_PATTERNTerminalRuleCall_0()); }
		RULE_TEMP_VARIABLE_PATTERN
		{ after(grammarAccess.getTempVariableAccess().getNameTEMP_VARIABLE_PATTERNTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalVariableAccess().getNameVARIABLE_INDENTIFIERParserRuleCall_0()); }
		ruleVARIABLE_INDENTIFIER
		{ after(grammarAccess.getLocalVariableAccess().getNameVARIABLE_INDENTIFIERParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DebugTag__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDebugTagAccess().getNameDEBUG_BEGINTerminalRuleCall_0()); }
		RULE_DEBUG_BEGIN
		{ after(grammarAccess.getDebugTagAccess().getNameDEBUG_BEGINTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommentLine__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentLineAccess().getNameSL_SC_COMMENTTerminalRuleCall_0()); }
		RULE_SL_SC_COMMENT
		{ after(grammarAccess.getCommentLineAccess().getNameSL_SC_COMMENTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getNameAlternatives_1_0()); }
		(rule__DataType__NameAlternatives_1_0)
		{ after(grammarAccess.getDataTypeAccess().getNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_CASE_ID : 'case ' RULE_INT;

RULE_TEMP_VARIABLE_PATTERN : '_' RULE_INT;

RULE_DEBUG_BEGIN : '# DEBUG BEGIN_STMT';

RULE_SL_SC_COMMENT : ';;' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
